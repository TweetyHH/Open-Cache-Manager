// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ocmgtk {
    
    
    public partial class CopyingProgress {
        
        private Gtk.Label copyLabel;
        
        private Gtk.VBox vbox2;
        
        private Gtk.HBox hbox2;
        
        private Gtk.Label label5;
        
        private Gtk.Label targetDBLabel;
        
        private Gtk.ProgressBar progressBar;
        
        private Gtk.Label statusLabel;
        
        private Gtk.Button buttonCancel;
        
        private Gtk.Button buttonOk;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget ocmgtk.CopyingProgress
            this.Name = "ocmgtk.CopyingProgress";
            this.Title = Mono.Unix.Catalog.GetString("Copy Geocaches...");
            this.WindowPosition = ((Gtk.WindowPosition)(4));
            this.BorderWidth = ((uint)(6));
            // Internal child ocmgtk.CopyingProgress.VBox
            Gtk.VBox w1 = this.VBox;
            w1.Name = "dialog1_VBox";
            w1.Spacing = 6;
            w1.BorderWidth = ((uint)(2));
            // Container child dialog1_VBox.Gtk.Box+BoxChild
            this.copyLabel = new Gtk.Label();
            this.copyLabel.Name = "copyLabel";
            this.copyLabel.Xalign = 0F;
            this.copyLabel.LabelProp = Mono.Unix.Catalog.GetString("<big><b>Copying Geocaches</b></big>");
            this.copyLabel.UseMarkup = true;
            w1.Add(this.copyLabel);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(w1[this.copyLabel]));
            w2.Position = 0;
            w2.Expand = false;
            w2.Fill = false;
            // Container child dialog1_VBox.Gtk.Box+BoxChild
            this.vbox2 = new Gtk.VBox();
            this.vbox2.Name = "vbox2";
            this.vbox2.Spacing = 6;
            // Container child vbox2.Gtk.Box+BoxChild
            this.hbox2 = new Gtk.HBox();
            this.hbox2.Name = "hbox2";
            this.hbox2.Spacing = 6;
            // Container child hbox2.Gtk.Box+BoxChild
            this.label5 = new Gtk.Label();
            this.label5.Name = "label5";
            this.label5.LabelProp = Mono.Unix.Catalog.GetString("<b>Target:</b>");
            this.label5.UseMarkup = true;
            this.hbox2.Add(this.label5);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.hbox2[this.label5]));
            w3.Position = 0;
            w3.Expand = false;
            w3.Fill = false;
            // Container child hbox2.Gtk.Box+BoxChild
            this.targetDBLabel = new Gtk.Label();
            this.targetDBLabel.Name = "targetDBLabel";
            this.targetDBLabel.LabelProp = "<target>";
            this.hbox2.Add(this.targetDBLabel);
            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.hbox2[this.targetDBLabel]));
            w4.Position = 1;
            w4.Expand = false;
            w4.Fill = false;
            this.vbox2.Add(this.hbox2);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.vbox2[this.hbox2]));
            w5.Position = 0;
            w5.Expand = false;
            w5.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            this.progressBar = new Gtk.ProgressBar();
            this.progressBar.Name = "progressBar";
            this.progressBar.Text = Mono.Unix.Catalog.GetString("0%");
            this.vbox2.Add(this.progressBar);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.vbox2[this.progressBar]));
            w6.Position = 1;
            w6.Expand = false;
            w6.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            this.statusLabel = new Gtk.Label();
            this.statusLabel.Name = "statusLabel";
            this.statusLabel.Xalign = 0F;
            this.statusLabel.LabelProp = "<i>status</i>";
            this.statusLabel.UseMarkup = true;
            this.vbox2.Add(this.statusLabel);
            Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(this.vbox2[this.statusLabel]));
            w7.Position = 2;
            w7.Expand = false;
            w7.Fill = false;
            w1.Add(this.vbox2);
            Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(w1[this.vbox2]));
            w8.Position = 1;
            w8.Expand = false;
            w8.Fill = false;
            // Internal child ocmgtk.CopyingProgress.ActionArea
            Gtk.HButtonBox w9 = this.ActionArea;
            w9.Name = "dialog1_ActionArea";
            w9.Spacing = 10;
            w9.BorderWidth = ((uint)(5));
            w9.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonCancel = new Gtk.Button();
            this.buttonCancel.CanDefault = true;
            this.buttonCancel.CanFocus = true;
            this.buttonCancel.Name = "buttonCancel";
            this.buttonCancel.UseStock = true;
            this.buttonCancel.UseUnderline = true;
            this.buttonCancel.Label = "gtk-cancel";
            this.AddActionWidget(this.buttonCancel, -6);
            Gtk.ButtonBox.ButtonBoxChild w10 = ((Gtk.ButtonBox.ButtonBoxChild)(w9[this.buttonCancel]));
            w10.Expand = false;
            w10.Fill = false;
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonOk = new Gtk.Button();
            this.buttonOk.CanDefault = true;
            this.buttonOk.CanFocus = true;
            this.buttonOk.Name = "buttonOk";
            this.buttonOk.UseStock = true;
            this.buttonOk.UseUnderline = true;
            this.buttonOk.Label = "gtk-close";
            this.AddActionWidget(this.buttonOk, -7);
            Gtk.ButtonBox.ButtonBoxChild w11 = ((Gtk.ButtonBox.ButtonBoxChild)(w9[this.buttonOk]));
            w11.Position = 1;
            w11.Expand = false;
            w11.Fill = false;
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 366;
            this.DefaultHeight = 199;
            this.Show();
            this.DeleteEvent += new Gtk.DeleteEventHandler(this.OnDeleteEvent);
            this.buttonCancel.Clicked += new System.EventHandler(this.OnCancelClick);
            this.buttonOk.Clicked += new System.EventHandler(this.OnButtonOkClicked);
        }
    }
}
