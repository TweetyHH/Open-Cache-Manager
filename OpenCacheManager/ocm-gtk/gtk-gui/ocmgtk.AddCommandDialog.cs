// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ocmgtk {
    
    
    public partial class AddCommandDialog {
        
        private Gtk.Table table1;
        
        private Gtk.Button chooseButton;
        
        private Gtk.Image image23;
        
        private Gtk.Entry execEntry;
        
        private Gtk.HBox hbox1;
        
        private Gtk.Image image1;
        
        private Gtk.Label label3;
        
        private Gtk.Label label1;
        
        private Gtk.Label label2;
        
        private Gtk.Entry nameEntry;
        
        private Gtk.Button buttonCancel;
        
        private Gtk.Button buttonOk;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget ocmgtk.AddCommandDialog
            this.Name = "ocmgtk.AddCommandDialog";
            this.Title = Mono.Unix.Catalog.GetString("Add External Tool");
            this.TypeHint = ((Gdk.WindowTypeHint)(1));
            this.WindowPosition = ((Gtk.WindowPosition)(4));
            this.Modal = true;
            this.BorderWidth = ((uint)(6));
            this.DestroyWithParent = true;
            this.SkipPagerHint = true;
            this.SkipTaskbarHint = true;
            // Internal child ocmgtk.AddCommandDialog.VBox
            Gtk.VBox w1 = this.VBox;
            w1.Name = "dialog1_VBox";
            w1.BorderWidth = ((uint)(2));
            // Container child dialog1_VBox.Gtk.Box+BoxChild
            this.table1 = new Gtk.Table(((uint)(3)), ((uint)(3)), false);
            this.table1.Name = "table1";
            this.table1.RowSpacing = ((uint)(6));
            this.table1.ColumnSpacing = ((uint)(6));
            // Container child table1.Gtk.Table+TableChild
            this.chooseButton = new Gtk.Button();
            this.chooseButton.CanFocus = true;
            this.chooseButton.Name = "chooseButton";
            // Container child chooseButton.Gtk.Container+ContainerChild
            this.image23 = new Gtk.Image();
            this.image23.Name = "image23";
            this.image23.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-open", Gtk.IconSize.Menu, 16);
            this.chooseButton.Add(this.image23);
            this.chooseButton.Label = null;
            this.table1.Add(this.chooseButton);
            Gtk.Table.TableChild w3 = ((Gtk.Table.TableChild)(this.table1[this.chooseButton]));
            w3.TopAttach = ((uint)(1));
            w3.BottomAttach = ((uint)(2));
            w3.LeftAttach = ((uint)(2));
            w3.RightAttach = ((uint)(3));
            w3.XOptions = ((Gtk.AttachOptions)(4));
            w3.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.execEntry = new Gtk.Entry();
            this.execEntry.CanFocus = true;
            this.execEntry.Name = "execEntry";
            this.execEntry.IsEditable = true;
            this.execEntry.WidthChars = 60;
            this.execEntry.InvisibleChar = '•';
            this.table1.Add(this.execEntry);
            Gtk.Table.TableChild w4 = ((Gtk.Table.TableChild)(this.table1[this.execEntry]));
            w4.TopAttach = ((uint)(1));
            w4.BottomAttach = ((uint)(2));
            w4.LeftAttach = ((uint)(1));
            w4.RightAttach = ((uint)(2));
            w4.XOptions = ((Gtk.AttachOptions)(4));
            w4.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.hbox1 = new Gtk.HBox();
            this.hbox1.Name = "hbox1";
            this.hbox1.Spacing = 6;
            // Container child hbox1.Gtk.Box+BoxChild
            this.image1 = new Gtk.Image();
            this.image1.Name = "image1";
            this.image1.Yalign = 0.1F;
            this.image1.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-dialog-info", Gtk.IconSize.Menu, 16);
            this.hbox1.Add(this.image1);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.hbox1[this.image1]));
            w5.Position = 0;
            w5.Expand = false;
            w5.Fill = false;
            // Container child hbox1.Gtk.Box+BoxChild
            this.label3 = new Gtk.Label();
            this.label3.Name = "label3";
            this.label3.Xalign = 0F;
            this.label3.LabelProp = Mono.Unix.Catalog.GetString("You can use %gpx% to have OCM send a GPX file to the external program, or %selected% to send just the selected cache as a GPX. You may also use %finds% to generate a Geocaching.com \"My Finds\" style GPX. ");
            this.label3.Wrap = true;
            this.label3.WidthChars = 80;
            this.hbox1.Add(this.label3);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.hbox1[this.label3]));
            w6.Position = 1;
            w6.Expand = false;
            w6.Fill = false;
            this.table1.Add(this.hbox1);
            Gtk.Table.TableChild w7 = ((Gtk.Table.TableChild)(this.table1[this.hbox1]));
            w7.TopAttach = ((uint)(2));
            w7.BottomAttach = ((uint)(3));
            w7.RightAttach = ((uint)(3));
            w7.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label1 = new Gtk.Label();
            this.label1.Name = "label1";
            this.label1.Xalign = 0F;
            this.label1.LabelProp = Mono.Unix.Catalog.GetString("Name:");
            this.table1.Add(this.label1);
            Gtk.Table.TableChild w8 = ((Gtk.Table.TableChild)(this.table1[this.label1]));
            w8.XOptions = ((Gtk.AttachOptions)(4));
            w8.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label2 = new Gtk.Label();
            this.label2.Name = "label2";
            this.label2.Xalign = 0F;
            this.label2.LabelProp = Mono.Unix.Catalog.GetString("Exec Path:");
            this.table1.Add(this.label2);
            Gtk.Table.TableChild w9 = ((Gtk.Table.TableChild)(this.table1[this.label2]));
            w9.TopAttach = ((uint)(1));
            w9.BottomAttach = ((uint)(2));
            w9.XOptions = ((Gtk.AttachOptions)(4));
            w9.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.nameEntry = new Gtk.Entry();
            this.nameEntry.CanFocus = true;
            this.nameEntry.Name = "nameEntry";
            this.nameEntry.IsEditable = true;
            this.nameEntry.InvisibleChar = '•';
            this.table1.Add(this.nameEntry);
            Gtk.Table.TableChild w10 = ((Gtk.Table.TableChild)(this.table1[this.nameEntry]));
            w10.LeftAttach = ((uint)(1));
            w10.RightAttach = ((uint)(2));
            w10.YOptions = ((Gtk.AttachOptions)(4));
            w1.Add(this.table1);
            Gtk.Box.BoxChild w11 = ((Gtk.Box.BoxChild)(w1[this.table1]));
            w11.Position = 0;
            w11.Expand = false;
            w11.Fill = false;
            // Internal child ocmgtk.AddCommandDialog.ActionArea
            Gtk.HButtonBox w12 = this.ActionArea;
            w12.Name = "dialog1_ActionArea";
            w12.Spacing = 10;
            w12.BorderWidth = ((uint)(5));
            w12.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonCancel = new Gtk.Button();
            this.buttonCancel.CanDefault = true;
            this.buttonCancel.CanFocus = true;
            this.buttonCancel.Name = "buttonCancel";
            this.buttonCancel.UseStock = true;
            this.buttonCancel.UseUnderline = true;
            this.buttonCancel.Label = "gtk-cancel";
            this.AddActionWidget(this.buttonCancel, -6);
            Gtk.ButtonBox.ButtonBoxChild w13 = ((Gtk.ButtonBox.ButtonBoxChild)(w12[this.buttonCancel]));
            w13.Expand = false;
            w13.Fill = false;
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonOk = new Gtk.Button();
            this.buttonOk.CanDefault = true;
            this.buttonOk.CanFocus = true;
            this.buttonOk.Name = "buttonOk";
            this.buttonOk.UseStock = true;
            this.buttonOk.UseUnderline = true;
            this.buttonOk.Label = "gtk-ok";
            this.AddActionWidget(this.buttonOk, -5);
            Gtk.ButtonBox.ButtonBoxChild w14 = ((Gtk.ButtonBox.ButtonBoxChild)(w12[this.buttonOk]));
            w14.Position = 1;
            w14.Expand = false;
            w14.Fill = false;
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 600;
            this.DefaultHeight = 209;
            this.Show();
            this.chooseButton.Clicked += new System.EventHandler(this.OnChooseClick);
            this.buttonCancel.Clicked += new System.EventHandler(this.OnCancelClick);
            this.buttonOk.Clicked += new System.EventHandler(this.OnOkClick);
        }
    }
}
