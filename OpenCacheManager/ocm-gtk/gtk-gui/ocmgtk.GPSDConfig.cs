// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ocmgtk {
    
    
    public partial class GPSDConfig {
        
        private Gtk.Table table1;
        
        private Gtk.HSeparator hseparator1;
        
        private Gtk.Label label1;
        
        private Gtk.Label label2;
        
        private Gtk.Entry pollEntry;
        
        private Gtk.CheckButton recenterCheck;
        
        private Gtk.CheckButton startupCheck;
        
        private Gtk.Button buttonCancel;
        
        private Gtk.Button buttonOk;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget ocmgtk.GPSDConfig
            this.Name = "ocmgtk.GPSDConfig";
            this.Title = Mono.Unix.Catalog.GetString("Configure GPSD...");
            this.WindowPosition = ((Gtk.WindowPosition)(4));
            this.BorderWidth = ((uint)(6));
            // Internal child ocmgtk.GPSDConfig.VBox
            Gtk.VBox w1 = this.VBox;
            w1.Name = "dialog1_VBox";
            w1.BorderWidth = ((uint)(2));
            // Container child dialog1_VBox.Gtk.Box+BoxChild
            this.table1 = new Gtk.Table(((uint)(4)), ((uint)(3)), false);
            this.table1.Name = "table1";
            this.table1.RowSpacing = ((uint)(6));
            this.table1.ColumnSpacing = ((uint)(6));
            // Container child table1.Gtk.Table+TableChild
            this.hseparator1 = new Gtk.HSeparator();
            this.hseparator1.Name = "hseparator1";
            this.table1.Add(this.hseparator1);
            Gtk.Table.TableChild w2 = ((Gtk.Table.TableChild)(this.table1[this.hseparator1]));
            w2.TopAttach = ((uint)(2));
            w2.BottomAttach = ((uint)(3));
            w2.RightAttach = ((uint)(3));
            w2.XOptions = ((Gtk.AttachOptions)(4));
            w2.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label1 = new Gtk.Label();
            this.label1.Name = "label1";
            this.label1.LabelProp = Mono.Unix.Catalog.GetString("Poll Interval:");
            this.table1.Add(this.label1);
            Gtk.Table.TableChild w3 = ((Gtk.Table.TableChild)(this.table1[this.label1]));
            w3.TopAttach = ((uint)(3));
            w3.BottomAttach = ((uint)(4));
            w3.XOptions = ((Gtk.AttachOptions)(4));
            w3.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label2 = new Gtk.Label();
            this.label2.Name = "label2";
            this.label2.LabelProp = Mono.Unix.Catalog.GetString("seconds");
            this.table1.Add(this.label2);
            Gtk.Table.TableChild w4 = ((Gtk.Table.TableChild)(this.table1[this.label2]));
            w4.TopAttach = ((uint)(3));
            w4.BottomAttach = ((uint)(4));
            w4.LeftAttach = ((uint)(2));
            w4.RightAttach = ((uint)(3));
            w4.XOptions = ((Gtk.AttachOptions)(4));
            w4.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.pollEntry = new Gtk.Entry();
            this.pollEntry.CanFocus = true;
            this.pollEntry.Name = "pollEntry";
            this.pollEntry.Text = Mono.Unix.Catalog.GetString("30");
            this.pollEntry.IsEditable = true;
            this.pollEntry.InvisibleChar = 'â€¢';
            this.table1.Add(this.pollEntry);
            Gtk.Table.TableChild w5 = ((Gtk.Table.TableChild)(this.table1[this.pollEntry]));
            w5.TopAttach = ((uint)(3));
            w5.BottomAttach = ((uint)(4));
            w5.LeftAttach = ((uint)(1));
            w5.RightAttach = ((uint)(2));
            w5.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.recenterCheck = new Gtk.CheckButton();
            this.recenterCheck.CanFocus = true;
            this.recenterCheck.Name = "recenterCheck";
            this.recenterCheck.Label = Mono.Unix.Catalog.GetString("Continuously Recenter Map");
            this.recenterCheck.Active = true;
            this.recenterCheck.DrawIndicator = true;
            this.recenterCheck.UseUnderline = true;
            this.table1.Add(this.recenterCheck);
            Gtk.Table.TableChild w6 = ((Gtk.Table.TableChild)(this.table1[this.recenterCheck]));
            w6.TopAttach = ((uint)(1));
            w6.BottomAttach = ((uint)(2));
            w6.RightAttach = ((uint)(3));
            w6.XOptions = ((Gtk.AttachOptions)(4));
            w6.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.startupCheck = new Gtk.CheckButton();
            this.startupCheck.CanFocus = true;
            this.startupCheck.Name = "startupCheck";
            this.startupCheck.Label = Mono.Unix.Catalog.GetString("Enable On Startup");
            this.startupCheck.DrawIndicator = true;
            this.startupCheck.UseUnderline = true;
            this.startupCheck.FocusOnClick = false;
            this.table1.Add(this.startupCheck);
            Gtk.Table.TableChild w7 = ((Gtk.Table.TableChild)(this.table1[this.startupCheck]));
            w7.RightAttach = ((uint)(3));
            w7.XOptions = ((Gtk.AttachOptions)(4));
            w7.YOptions = ((Gtk.AttachOptions)(4));
            w1.Add(this.table1);
            Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(w1[this.table1]));
            w8.Position = 0;
            w8.Expand = false;
            w8.Fill = false;
            // Internal child ocmgtk.GPSDConfig.ActionArea
            Gtk.HButtonBox w9 = this.ActionArea;
            w9.Name = "dialog1_ActionArea";
            w9.Spacing = 10;
            w9.BorderWidth = ((uint)(5));
            w9.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonCancel = new Gtk.Button();
            this.buttonCancel.CanDefault = true;
            this.buttonCancel.CanFocus = true;
            this.buttonCancel.Name = "buttonCancel";
            this.buttonCancel.UseStock = true;
            this.buttonCancel.UseUnderline = true;
            this.buttonCancel.Label = "gtk-cancel";
            this.AddActionWidget(this.buttonCancel, -6);
            Gtk.ButtonBox.ButtonBoxChild w10 = ((Gtk.ButtonBox.ButtonBoxChild)(w9[this.buttonCancel]));
            w10.Expand = false;
            w10.Fill = false;
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonOk = new Gtk.Button();
            this.buttonOk.CanDefault = true;
            this.buttonOk.CanFocus = true;
            this.buttonOk.Name = "buttonOk";
            this.buttonOk.UseStock = true;
            this.buttonOk.UseUnderline = true;
            this.buttonOk.Label = "gtk-ok";
            this.AddActionWidget(this.buttonOk, -5);
            Gtk.ButtonBox.ButtonBoxChild w11 = ((Gtk.ButtonBox.ButtonBoxChild)(w9[this.buttonOk]));
            w11.Position = 1;
            w11.Expand = false;
            w11.Fill = false;
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 425;
            this.DefaultHeight = 195;
            this.Show();
            this.buttonCancel.Clicked += new System.EventHandler(this.OnButtonCancelClicked);
            this.buttonOk.Clicked += new System.EventHandler(this.OnOK);
        }
    }
}
