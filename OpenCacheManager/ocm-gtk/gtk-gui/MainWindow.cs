// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------



public partial class MainWindow {
    
    private Gtk.UIManager UIManager;
    
    private Gtk.Action FileAction;
    
    private Gtk.Action QuitAction;
    
    private Gtk.Action EditAction;
    
    private Gtk.Action HelpAction;
    
    private Gtk.Action AboutAction;
    
    private Gtk.Action ClearAllFiltersAction;
    
    private Gtk.Action GPSAction;
    
    private Gtk.Action CacheAction;
    
    private Gtk.Action ViewOnlineAction;
    
    private Gtk.Action DeleteAction;
    
    private Gtk.Action newAction;
    
    private Gtk.Action openAction1;
    
    private Gtk.Action GeocachingComAction;
    
    private Gtk.Action ViewCacheOnlineAction;
    
    private Gtk.Action ViewMyProfileAction;
    
    private Gtk.Action CreatePocketQueriesAction;
    
    private Gtk.Action FindACacheAction;
    
    private Gtk.Action HomePageAction;
    
    private Gtk.Action MyAccountDetailsAction;
    
    private Gtk.Action newAction1;
    
    private Gtk.Action openAction2;
    
    private Gtk.Action openAction;
    
    private Gtk.Action saveAsAction;
    
    private Gtk.Action PreferencesAction;
    
    private Gtk.Action LogFindAction;
    
    private Gtk.Action MarkUnfoundAction;
    
    private Gtk.Action DeleteCacheAction;
    
    private Gtk.Action FilterAction1;
    
    private Gtk.Action AdditonalFiltersAction;
    
    private Gtk.Action ClearAdditonalFiltersAction;
    
    private Gtk.Action PreferencesAction1;
    
    private Gtk.Action MapAction;
    
    private Gtk.Action ZoomToCentreAction;
    
    private Gtk.Action ZoomToSelectedCacheAction;
    
    private Gtk.Action ConfigureGPSAction;
    
    private Gtk.Action SendCachesAction;
    
    private Gtk.Action ChangeHistoryAction;
    
    private Gtk.Action SetSelectedCacheAsCentreAction;
    
    private Gtk.Action ResetCentreToHomeAction;
    
    private Gtk.ToggleAction ShowNearbyCachesAction;
    
    private Gtk.VBox vbox1;
    
    private Gtk.MenuBar mainmenubar;
    
    private Gtk.HPaned hSplitPane;
    
    private ocmgtk.CacheList cacheList;
    
    private ocmgtk.GeoCachePane cachePane;
    
    private Gtk.Statusbar statusbar1;
    
    private Gtk.Label coordLabel;
    
    private Gtk.ProgressBar statProgBar;
    
    protected virtual void Build() {
        Stetic.Gui.Initialize(this);
        // Widget MainWindow
        this.UIManager = new Gtk.UIManager();
        Gtk.ActionGroup w1 = new Gtk.ActionGroup("Default");
        this.FileAction = new Gtk.Action("FileAction", Mono.Unix.Catalog.GetString("_File"), null, null);
        this.FileAction.ShortLabel = Mono.Unix.Catalog.GetString("_File");
        w1.Add(this.FileAction, "<Alt><Mod2>f");
        this.QuitAction = new Gtk.Action("QuitAction", Mono.Unix.Catalog.GetString("_Quit"), null, "gtk-quit");
        this.QuitAction.ShortLabel = Mono.Unix.Catalog.GetString("_Quit");
        w1.Add(this.QuitAction, null);
        this.EditAction = new Gtk.Action("EditAction", Mono.Unix.Catalog.GetString("_Edit"), null, null);
        this.EditAction.ShortLabel = Mono.Unix.Catalog.GetString("Edit");
        w1.Add(this.EditAction, null);
        this.HelpAction = new Gtk.Action("HelpAction", Mono.Unix.Catalog.GetString("_Help"), null, null);
        this.HelpAction.ShortLabel = Mono.Unix.Catalog.GetString("Help");
        w1.Add(this.HelpAction, null);
        this.AboutAction = new Gtk.Action("AboutAction", Mono.Unix.Catalog.GetString("About"), null, "gtk-about");
        this.AboutAction.ShortLabel = Mono.Unix.Catalog.GetString("About");
        w1.Add(this.AboutAction, null);
        this.ClearAllFiltersAction = new Gtk.Action("ClearAllFiltersAction", Mono.Unix.Catalog.GetString("Clear All Filters"), null, null);
        this.ClearAllFiltersAction.ShortLabel = Mono.Unix.Catalog.GetString("Clear All Filters");
        w1.Add(this.ClearAllFiltersAction, null);
        this.GPSAction = new Gtk.Action("GPSAction", Mono.Unix.Catalog.GetString("G_PS"), null, null);
        this.GPSAction.ShortLabel = Mono.Unix.Catalog.GetString("GPS");
        w1.Add(this.GPSAction, null);
        this.CacheAction = new Gtk.Action("CacheAction", Mono.Unix.Catalog.GetString("_Cache"), null, null);
        this.CacheAction.Sensitive = false;
        this.CacheAction.ShortLabel = Mono.Unix.Catalog.GetString("Cache");
        w1.Add(this.CacheAction, null);
        this.ViewOnlineAction = new Gtk.Action("ViewOnlineAction", Mono.Unix.Catalog.GetString("_View Online"), null, "gtk-info");
        this.ViewOnlineAction.ShortLabel = Mono.Unix.Catalog.GetString("_View Online");
        w1.Add(this.ViewOnlineAction, null);
        this.DeleteAction = new Gtk.Action("DeleteAction", Mono.Unix.Catalog.GetString("_Delete"), null, "gtk-delete");
        this.DeleteAction.ShortLabel = Mono.Unix.Catalog.GetString("_Delete");
        w1.Add(this.DeleteAction, null);
        this.newAction = new Gtk.Action("newAction", Mono.Unix.Catalog.GetString("_New Database..."), null, "gtk-new");
        this.newAction.ShortLabel = Mono.Unix.Catalog.GetString("_New Database...");
        w1.Add(this.newAction, null);
        this.openAction1 = new Gtk.Action("openAction1", Mono.Unix.Catalog.GetString("Open Database..."), null, "gtk-open");
        this.openAction1.ShortLabel = Mono.Unix.Catalog.GetString("Open Database...");
        w1.Add(this.openAction1, null);
        this.GeocachingComAction = new Gtk.Action("GeocachingComAction", Mono.Unix.Catalog.GetString("_Geocaching.com"), null, null);
        this.GeocachingComAction.ShortLabel = Mono.Unix.Catalog.GetString("_Geocaching.com");
        w1.Add(this.GeocachingComAction, null);
        this.ViewCacheOnlineAction = new Gtk.Action("ViewCacheOnlineAction", Mono.Unix.Catalog.GetString("View Cache Online..."), null, null);
        this.ViewCacheOnlineAction.Sensitive = false;
        this.ViewCacheOnlineAction.ShortLabel = Mono.Unix.Catalog.GetString("View Cache Online...");
        w1.Add(this.ViewCacheOnlineAction, null);
        this.ViewMyProfileAction = new Gtk.Action("ViewMyProfileAction", Mono.Unix.Catalog.GetString("View My Profile..."), null, null);
        this.ViewMyProfileAction.ShortLabel = Mono.Unix.Catalog.GetString("View My Profile...");
        w1.Add(this.ViewMyProfileAction, null);
        this.CreatePocketQueriesAction = new Gtk.Action("CreatePocketQueriesAction", Mono.Unix.Catalog.GetString("Create Pocket Queries..."), null, null);
        this.CreatePocketQueriesAction.ShortLabel = Mono.Unix.Catalog.GetString("Create Pocket Queries...");
        w1.Add(this.CreatePocketQueriesAction, null);
        this.FindACacheAction = new Gtk.Action("FindACacheAction", Mono.Unix.Catalog.GetString("Find a Cache..."), null, null);
        this.FindACacheAction.ShortLabel = Mono.Unix.Catalog.GetString("Find a Cache...");
        w1.Add(this.FindACacheAction, null);
        this.HomePageAction = new Gtk.Action("HomePageAction", Mono.Unix.Catalog.GetString("Home Page..."), null, null);
        this.HomePageAction.ShortLabel = Mono.Unix.Catalog.GetString("Home Page...");
        w1.Add(this.HomePageAction, null);
        this.MyAccountDetailsAction = new Gtk.Action("MyAccountDetailsAction", Mono.Unix.Catalog.GetString("My Account Details..."), null, null);
        this.MyAccountDetailsAction.ShortLabel = Mono.Unix.Catalog.GetString("My Account Details...");
        w1.Add(this.MyAccountDetailsAction, null);
        this.newAction1 = new Gtk.Action("newAction1", Mono.Unix.Catalog.GetString("New Database..."), null, "gtk-new");
        this.newAction1.ShortLabel = Mono.Unix.Catalog.GetString("New Database...");
        w1.Add(this.newAction1, null);
        this.openAction2 = new Gtk.Action("openAction2", Mono.Unix.Catalog.GetString("Open Database..."), null, "gtk-open");
        this.openAction2.ShortLabel = Mono.Unix.Catalog.GetString("Open Database...");
        w1.Add(this.openAction2, "<Control><Alt><Mod2>o");
        this.openAction = new Gtk.Action("openAction", Mono.Unix.Catalog.GetString("Open GPX..."), null, "gtk-open");
        this.openAction.ShortLabel = Mono.Unix.Catalog.GetString("Import GPX...");
        w1.Add(this.openAction, "<Control><Mod2>o");
        this.saveAsAction = new Gtk.Action("saveAsAction", Mono.Unix.Catalog.GetString("Save GPX..."), null, "gtk-save-as");
        this.saveAsAction.ShortLabel = Mono.Unix.Catalog.GetString("SaveGPX...");
        w1.Add(this.saveAsAction, "<Control><Mod2>s");
        this.PreferencesAction = new Gtk.Action("PreferencesAction", Mono.Unix.Catalog.GetString("Preferences..."), null, null);
        this.PreferencesAction.ShortLabel = Mono.Unix.Catalog.GetString("Preferences...");
        w1.Add(this.PreferencesAction, null);
        this.LogFindAction = new Gtk.Action("LogFindAction", Mono.Unix.Catalog.GetString("Log Find"), null, null);
        this.LogFindAction.ShortLabel = Mono.Unix.Catalog.GetString("Log Find");
        w1.Add(this.LogFindAction, null);
        this.MarkUnfoundAction = new Gtk.Action("MarkUnfoundAction", Mono.Unix.Catalog.GetString("Mark Unfound"), null, null);
        this.MarkUnfoundAction.ShortLabel = Mono.Unix.Catalog.GetString("Mark Unfound");
        w1.Add(this.MarkUnfoundAction, null);
        this.DeleteCacheAction = new Gtk.Action("DeleteCacheAction", Mono.Unix.Catalog.GetString("Delete Cache..."), null, null);
        this.DeleteCacheAction.ShortLabel = Mono.Unix.Catalog.GetString("Delete Cache...");
        w1.Add(this.DeleteCacheAction, null);
        this.FilterAction1 = new Gtk.Action("FilterAction1", Mono.Unix.Catalog.GetString("F_ilter"), null, null);
        this.FilterAction1.ShortLabel = Mono.Unix.Catalog.GetString("_View");
        w1.Add(this.FilterAction1, null);
        this.AdditonalFiltersAction = new Gtk.Action("AdditonalFiltersAction", Mono.Unix.Catalog.GetString("_Additonal Filters..."), null, null);
        this.AdditonalFiltersAction.ShortLabel = Mono.Unix.Catalog.GetString("_Additonal Filters...");
        w1.Add(this.AdditonalFiltersAction, "<Control><Mod2>f");
        this.ClearAdditonalFiltersAction = new Gtk.Action("ClearAdditonalFiltersAction", Mono.Unix.Catalog.GetString("_Clear Additonal Filters"), null, null);
        this.ClearAdditonalFiltersAction.Sensitive = false;
        this.ClearAdditonalFiltersAction.ShortLabel = Mono.Unix.Catalog.GetString("_Clear Additonal Filters");
        w1.Add(this.ClearAdditonalFiltersAction, null);
        this.PreferencesAction1 = new Gtk.Action("PreferencesAction1", Mono.Unix.Catalog.GetString("_Preferences..."), null, null);
        this.PreferencesAction1.ShortLabel = Mono.Unix.Catalog.GetString("Preferences...");
        w1.Add(this.PreferencesAction1, null);
        this.MapAction = new Gtk.Action("MapAction", Mono.Unix.Catalog.GetString("_Map"), null, null);
        this.MapAction.ShortLabel = Mono.Unix.Catalog.GetString("_Map");
        w1.Add(this.MapAction, null);
        this.ZoomToCentreAction = new Gtk.Action("ZoomToCentreAction", Mono.Unix.Catalog.GetString("Zoom to Centre"), null, null);
        this.ZoomToCentreAction.ShortLabel = Mono.Unix.Catalog.GetString("Zoom to Centre");
        w1.Add(this.ZoomToCentreAction, "<Alt><Mod2>Home");
        this.ZoomToSelectedCacheAction = new Gtk.Action("ZoomToSelectedCacheAction", Mono.Unix.Catalog.GetString("Zoom to Selected Cache"), null, null);
        this.ZoomToSelectedCacheAction.Sensitive = false;
        this.ZoomToSelectedCacheAction.ShortLabel = Mono.Unix.Catalog.GetString("Zoom to Selected Cache");
        w1.Add(this.ZoomToSelectedCacheAction, null);
        this.ConfigureGPSAction = new Gtk.Action("ConfigureGPSAction", Mono.Unix.Catalog.GetString("_Configure GPS..."), null, null);
        this.ConfigureGPSAction.ShortLabel = Mono.Unix.Catalog.GetString("Configure GPS...");
        w1.Add(this.ConfigureGPSAction, null);
        this.SendCachesAction = new Gtk.Action("SendCachesAction", Mono.Unix.Catalog.GetString("_Send Caches..."), null, null);
        this.SendCachesAction.ShortLabel = Mono.Unix.Catalog.GetString("Send Caches...");
        w1.Add(this.SendCachesAction, "<Control><Alt><Mod2>c");
        this.ChangeHistoryAction = new Gtk.Action("ChangeHistoryAction", Mono.Unix.Catalog.GetString("Change History..."), null, null);
        this.ChangeHistoryAction.ShortLabel = Mono.Unix.Catalog.GetString("Change History...");
        w1.Add(this.ChangeHistoryAction, null);
        this.SetSelectedCacheAsCentreAction = new Gtk.Action("SetSelectedCacheAsCentreAction", Mono.Unix.Catalog.GetString("Set Selected Cache As Centre"), null, null);
        this.SetSelectedCacheAsCentreAction.Sensitive = false;
        this.SetSelectedCacheAsCentreAction.ShortLabel = Mono.Unix.Catalog.GetString("Set Selected Cache As Centre");
        w1.Add(this.SetSelectedCacheAsCentreAction, null);
        this.ResetCentreToHomeAction = new Gtk.Action("ResetCentreToHomeAction", Mono.Unix.Catalog.GetString("Reset Centre to Home"), null, null);
        this.ResetCentreToHomeAction.Sensitive = false;
        this.ResetCentreToHomeAction.ShortLabel = Mono.Unix.Catalog.GetString("Reset Centre to Home");
        w1.Add(this.ResetCentreToHomeAction, null);
        this.ShowNearbyCachesAction = new Gtk.ToggleAction("ShowNearbyCachesAction", Mono.Unix.Catalog.GetString("Show Nearby Caches"), null, null);
        this.ShowNearbyCachesAction.ShortLabel = Mono.Unix.Catalog.GetString("Show Nearby Caches");
        w1.Add(this.ShowNearbyCachesAction, null);
        this.UIManager.InsertActionGroup(w1, 0);
        this.AddAccelGroup(this.UIManager.AccelGroup);
        this.Name = "MainWindow";
        this.Title = Mono.Unix.Catalog.GetString("OCM");
        this.Icon = Gdk.Pixbuf.LoadFromResource("ocmgtk.icons.scalable.OCMLogoSmall.svg");
        this.WindowPosition = ((Gtk.WindowPosition)(1));
        this.AllowShrink = true;
        this.DefaultWidth = 1024;
        this.DefaultHeight = 768;
        // Container child MainWindow.Gtk.Container+ContainerChild
        this.vbox1 = new Gtk.VBox();
        this.vbox1.Name = "vbox1";
        // Container child vbox1.Gtk.Box+BoxChild
        this.UIManager.AddUiFromString("<ui><menubar name='mainmenubar'><menu name='FileAction' action='FileAction'><menuitem name='newAction1' action='newAction1'/><menuitem name='openAction2' action='openAction2'/><separator/><menuitem name='openAction' action='openAction'/><menuitem name='saveAsAction' action='saveAsAction'/><separator/><menuitem name='QuitAction' action='QuitAction'/></menu><menu name='EditAction' action='EditAction'><menuitem name='PreferencesAction1' action='PreferencesAction1'/></menu><menu name='FilterAction1' action='FilterAction1'><menuitem name='AdditonalFiltersAction' action='AdditonalFiltersAction'/><separator/><menuitem name='ClearAdditonalFiltersAction' action='ClearAdditonalFiltersAction'/></menu><menu name='CacheAction' action='CacheAction'><menuitem name='ViewOnlineAction' action='ViewOnlineAction'/><menuitem name='LogFindAction' action='LogFindAction'/><menuitem name='MarkUnfoundAction' action='MarkUnfoundAction'/><separator/><menuitem name='DeleteCacheAction' action='DeleteCacheAction'/></menu><menu name='GeocachingComAction' action='GeocachingComAction'><menuitem name='HomePageAction' action='HomePageAction'/><menuitem name='ViewMyProfileAction' action='ViewMyProfileAction'/><menuitem name='MyAccountDetailsAction' action='MyAccountDetailsAction'/><menuitem name='CreatePocketQueriesAction' action='CreatePocketQueriesAction'/><separator/><menuitem name='FindACacheAction' action='FindACacheAction'/><menuitem name='ViewCacheOnlineAction' action='ViewCacheOnlineAction'/></menu><menu name='MapAction' action='MapAction'><menuitem name='ShowNearbyCachesAction' action='ShowNearbyCachesAction'/><separator/><menuitem name='ZoomToCentreAction' action='ZoomToCentreAction'/><menuitem name='ZoomToSelectedCacheAction' action='ZoomToSelectedCacheAction'/><menuitem name='SetSelectedCacheAsCentreAction' action='SetSelectedCacheAsCentreAction'/><menuitem name='ResetCentreToHomeAction' action='ResetCentreToHomeAction'/></menu><menu name='GPSAction' action='GPSAction'><menuitem name='ConfigureGPSAction' action='ConfigureGPSAction'/><separator/><menuitem name='SendCachesAction' action='SendCachesAction'/></menu><menu name='HelpAction' action='HelpAction'><menuitem name='AboutAction' action='AboutAction'/><menuitem name='ChangeHistoryAction' action='ChangeHistoryAction'/></menu></menubar></ui>");
        this.mainmenubar = ((Gtk.MenuBar)(this.UIManager.GetWidget("/mainmenubar")));
        this.mainmenubar.Name = "mainmenubar";
        this.vbox1.Add(this.mainmenubar);
        Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.vbox1[this.mainmenubar]));
        w2.Position = 0;
        w2.Expand = false;
        w2.Fill = false;
        // Container child vbox1.Gtk.Box+BoxChild
        this.hSplitPane = new Gtk.HPaned();
        this.hSplitPane.CanFocus = true;
        this.hSplitPane.Name = "hSplitPane";
        this.hSplitPane.Position = 400;
        this.hSplitPane.BorderWidth = ((uint)(6));
        // Container child hSplitPane.Gtk.Paned+PanedChild
        this.cacheList = new ocmgtk.CacheList();
        this.cacheList.Events = ((Gdk.EventMask)(256));
        this.cacheList.Name = "cacheList";
        this.hSplitPane.Add(this.cacheList);
        Gtk.Paned.PanedChild w3 = ((Gtk.Paned.PanedChild)(this.hSplitPane[this.cacheList]));
        w3.Resize = false;
        // Container child hSplitPane.Gtk.Paned+PanedChild
        this.cachePane = new ocmgtk.GeoCachePane();
        this.cachePane.Events = ((Gdk.EventMask)(256));
        this.cachePane.Name = "cachePane";
        this.hSplitPane.Add(this.cachePane);
        this.vbox1.Add(this.hSplitPane);
        Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.vbox1[this.hSplitPane]));
        w5.Position = 1;
        // Container child vbox1.Gtk.Box+BoxChild
        this.statusbar1 = new Gtk.Statusbar();
        this.statusbar1.Name = "statusbar1";
        this.statusbar1.Spacing = 6;
        this.statusbar1.BorderWidth = ((uint)(6));
        // Container child statusbar1.Gtk.Box+BoxChild
        this.coordLabel = new Gtk.Label();
        this.coordLabel.Name = "coordLabel";
        this.coordLabel.Xpad = 6;
        this.coordLabel.Xalign = 1F;
        this.coordLabel.LabelProp = Mono.Unix.Catalog.GetString("Not Set");
        this.statusbar1.Add(this.coordLabel);
        Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.statusbar1[this.coordLabel]));
        w6.Position = 1;
        w6.Expand = false;
        w6.Fill = false;
        // Container child statusbar1.Gtk.Box+BoxChild
        this.statProgBar = new Gtk.ProgressBar();
        this.statProgBar.WidthRequest = 200;
        this.statProgBar.HeightRequest = 5;
        this.statProgBar.Name = "statProgBar";
        this.statusbar1.Add(this.statProgBar);
        Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(this.statusbar1[this.statProgBar]));
        w7.Position = 2;
        w7.Expand = false;
        this.vbox1.Add(this.statusbar1);
        Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(this.vbox1[this.statusbar1]));
        w8.PackType = ((Gtk.PackType)(1));
        w8.Position = 2;
        w8.Expand = false;
        w8.Fill = false;
        this.Add(this.vbox1);
        if ((this.Child != null)) {
            this.Child.ShowAll();
        }
        this.statProgBar.Hide();
        this.Show();
        this.DeleteEvent += new Gtk.DeleteEventHandler(this.OnDeleteEvent);
        this.QuitAction.Activated += new System.EventHandler(this.OnQuit);
        this.AboutAction.Activated += new System.EventHandler(this.doAbout);
        this.ViewOnlineAction.Activated += new System.EventHandler(this.OnViewOnline);
        this.newAction.Activated += new System.EventHandler(this.OnNewActionActivated);
        this.openAction1.Activated += new System.EventHandler(this.OnOpenDatabaseClicked);
        this.ViewCacheOnlineAction.Activated += new System.EventHandler(this.OnViewOnlineActivate);
        this.ViewMyProfileAction.Activated += new System.EventHandler(this.OnViewProfileActivate);
        this.CreatePocketQueriesAction.Activated += new System.EventHandler(this.OnPocketQueryActivate);
        this.FindACacheAction.Activated += new System.EventHandler(this.OnFindOnlineActivate);
        this.HomePageAction.Activated += new System.EventHandler(this.OnHomePageActivate);
        this.MyAccountDetailsAction.Activated += new System.EventHandler(this.OnAccountActivated);
        this.newAction1.Activated += new System.EventHandler(this.OnNewActionActivated);
        this.openAction2.Activated += new System.EventHandler(this.OnOpenDatabaseClicked);
        this.openAction.Activated += new System.EventHandler(this.OnImportClicked);
        this.saveAsAction.Activated += new System.EventHandler(this.OnExportClicked);
        this.LogFindAction.Activated += new System.EventHandler(this.OnClickLog);
        this.MarkUnfoundAction.Activated += new System.EventHandler(this.OnClickMarkUnfound);
        this.DeleteCacheAction.Activated += new System.EventHandler(this.OnDelete);
        this.AdditonalFiltersAction.Activated += new System.EventHandler(this.OnFilterClick);
        this.ClearAdditonalFiltersAction.Activated += new System.EventHandler(this.OnClickClearFilters);
        this.PreferencesAction1.Activated += new System.EventHandler(this.OnPrefsClicked);
        this.ZoomToCentreAction.Activated += new System.EventHandler(this.OnZoomHome);
        this.ZoomToSelectedCacheAction.Activated += new System.EventHandler(this.OnZoomSelected);
        this.ConfigureGPSAction.Activated += new System.EventHandler(this.OnConfigure);
        this.SendCachesAction.Activated += new System.EventHandler(this.OnSendCachesActionActivated);
        this.ChangeHistoryAction.Activated += new System.EventHandler(this.OnChangeHistoryClick);
        this.SetSelectedCacheAsCentreAction.Activated += new System.EventHandler(this.OnSetCentre);
        this.ResetCentreToHomeAction.Activated += new System.EventHandler(this.OnResetCentre);
        this.ShowNearbyCachesAction.Toggled += new System.EventHandler(this.OnShowAllToggle);
    }
}
