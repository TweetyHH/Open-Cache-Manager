// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------



public partial class MainWindow {
    
    private Gtk.UIManager UIManager;
    
    private Gtk.Action FileAction;
    
    private Gtk.Action QuitAction;
    
    private Gtk.Action EditAction;
    
    private Gtk.Action ViewAction;
    
    private Gtk.Action HelpAction;
    
    private Gtk.Action missingImageAction;
    
    private Gtk.Action openAction;
    
    private Gtk.Action saveAction;
    
    private Gtk.Action saveAsAction;
    
    private Gtk.Action OpenAction;
    
    private Gtk.Action SaveAction;
    
    private Gtk.Action ExportAction;
    
    private Gtk.Action AboutAction;
    
    private Gtk.Action convertAction;
    
    private Gtk.Action openAction1;
    
    private Gtk.ToggleAction ShowUnavailableCachesAction;
    
    private Gtk.ToggleAction ShowArchivedCachesAction;
    
    private Gtk.ToggleAction ShowCachesPlacedByMeAction;
    
    private Gtk.Action ClearAllFiltersAction;
    
    private Gtk.Action FilterAction;
    
    private Gtk.ToggleAction ShowFoundCachesAction;
    
    private Gtk.VBox vbox1;
    
    private Gtk.MenuBar mainmenubar;
    
    private Gtk.Toolbar toolbar1;
    
    private Gtk.HPaned hSplitPane;
    
    private ocmgtk.CacheList cacheList;
    
    private ocmgtk.GeoCachePane cachePane;
    
    private Gtk.Statusbar statusbar1;
    
    protected virtual void Build() {
        Stetic.Gui.Initialize(this);
        // Widget MainWindow
        this.UIManager = new Gtk.UIManager();
        Gtk.ActionGroup w1 = new Gtk.ActionGroup("Default");
        this.FileAction = new Gtk.Action("FileAction", Mono.Unix.Catalog.GetString("_File"), null, null);
        this.FileAction.ShortLabel = Mono.Unix.Catalog.GetString("_File");
        w1.Add(this.FileAction, "<Alt><Mod2>f");
        this.QuitAction = new Gtk.Action("QuitAction", Mono.Unix.Catalog.GetString("_Quit"), null, "gtk-quit");
        this.QuitAction.ShortLabel = Mono.Unix.Catalog.GetString("_Quit");
        w1.Add(this.QuitAction, null);
        this.EditAction = new Gtk.Action("EditAction", Mono.Unix.Catalog.GetString("Edit"), null, null);
        this.EditAction.ShortLabel = Mono.Unix.Catalog.GetString("Edit");
        w1.Add(this.EditAction, null);
        this.ViewAction = new Gtk.Action("ViewAction", Mono.Unix.Catalog.GetString("View"), null, null);
        this.ViewAction.ShortLabel = Mono.Unix.Catalog.GetString("View");
        w1.Add(this.ViewAction, null);
        this.HelpAction = new Gtk.Action("HelpAction", Mono.Unix.Catalog.GetString("Help"), null, null);
        this.HelpAction.ShortLabel = Mono.Unix.Catalog.GetString("Help");
        w1.Add(this.HelpAction, null);
        this.missingImageAction = new Gtk.Action("missingImageAction", null, null, "gtk-missing-image");
        w1.Add(this.missingImageAction, null);
        this.openAction = new Gtk.Action("openAction", null, null, "gtk-open");
        w1.Add(this.openAction, null);
        this.saveAction = new Gtk.Action("saveAction", null, null, "gtk-save");
        w1.Add(this.saveAction, null);
        this.saveAsAction = new Gtk.Action("saveAsAction", null, null, "gtk-save-as");
        w1.Add(this.saveAsAction, null);
        this.OpenAction = new Gtk.Action("OpenAction", Mono.Unix.Catalog.GetString("Open"), null, null);
        this.OpenAction.ShortLabel = Mono.Unix.Catalog.GetString("Open");
        w1.Add(this.OpenAction, null);
        this.SaveAction = new Gtk.Action("SaveAction", Mono.Unix.Catalog.GetString("Save"), null, null);
        this.SaveAction.ShortLabel = Mono.Unix.Catalog.GetString("Save");
        w1.Add(this.SaveAction, null);
        this.ExportAction = new Gtk.Action("ExportAction", Mono.Unix.Catalog.GetString("Export..."), null, null);
        this.ExportAction.ShortLabel = Mono.Unix.Catalog.GetString("Export...");
        w1.Add(this.ExportAction, null);
        this.AboutAction = new Gtk.Action("AboutAction", Mono.Unix.Catalog.GetString("About"), null, "gtk-about");
        this.AboutAction.ShortLabel = Mono.Unix.Catalog.GetString("About");
        w1.Add(this.AboutAction, null);
        this.convertAction = new Gtk.Action("convertAction", null, null, "gtk-convert");
        w1.Add(this.convertAction, null);
        this.openAction1 = new Gtk.Action("openAction1", null, null, "gtk-open");
        w1.Add(this.openAction1, null);
        this.ShowUnavailableCachesAction = new Gtk.ToggleAction("ShowUnavailableCachesAction", Mono.Unix.Catalog.GetString("Show Unavailable Caches"), null, null);
        this.ShowUnavailableCachesAction.Active = true;
        this.ShowUnavailableCachesAction.ShortLabel = Mono.Unix.Catalog.GetString("Show Unavailable Caches");
        w1.Add(this.ShowUnavailableCachesAction, null);
        this.ShowArchivedCachesAction = new Gtk.ToggleAction("ShowArchivedCachesAction", Mono.Unix.Catalog.GetString("Show Archived Caches"), null, null);
        this.ShowArchivedCachesAction.Active = true;
        this.ShowArchivedCachesAction.ShortLabel = Mono.Unix.Catalog.GetString("Show Archived Caches");
        w1.Add(this.ShowArchivedCachesAction, null);
        this.ShowCachesPlacedByMeAction = new Gtk.ToggleAction("ShowCachesPlacedByMeAction", Mono.Unix.Catalog.GetString("Show Caches Placed by Me"), null, null);
        this.ShowCachesPlacedByMeAction.Active = true;
        this.ShowCachesPlacedByMeAction.ShortLabel = Mono.Unix.Catalog.GetString("Show Caches Placed by Me");
        w1.Add(this.ShowCachesPlacedByMeAction, null);
        this.ClearAllFiltersAction = new Gtk.Action("ClearAllFiltersAction", Mono.Unix.Catalog.GetString("Clear All Filters"), null, null);
        this.ClearAllFiltersAction.ShortLabel = Mono.Unix.Catalog.GetString("Clear All Filters");
        w1.Add(this.ClearAllFiltersAction, null);
        this.FilterAction = new Gtk.Action("FilterAction", Mono.Unix.Catalog.GetString("Filter..."), null, null);
        this.FilterAction.ShortLabel = Mono.Unix.Catalog.GetString("Filter...");
        w1.Add(this.FilterAction, null);
        this.ShowFoundCachesAction = new Gtk.ToggleAction("ShowFoundCachesAction", Mono.Unix.Catalog.GetString("Show Found Caches"), null, null);
        this.ShowFoundCachesAction.Active = true;
        this.ShowFoundCachesAction.ShortLabel = Mono.Unix.Catalog.GetString("Show Found Caches");
        w1.Add(this.ShowFoundCachesAction, null);
        this.UIManager.InsertActionGroup(w1, 0);
        this.AddAccelGroup(this.UIManager.AccelGroup);
        this.Name = "MainWindow";
        this.Title = Mono.Unix.Catalog.GetString("Open Cache Manager");
        this.Icon = Gdk.Pixbuf.LoadFromResource("traditional.svg");
        this.WindowPosition = ((Gtk.WindowPosition)(1));
        // Container child MainWindow.Gtk.Container+ContainerChild
        this.vbox1 = new Gtk.VBox();
        this.vbox1.Name = "vbox1";
        // Container child vbox1.Gtk.Box+BoxChild
        this.UIManager.AddUiFromString("<ui><menubar name='mainmenubar'><menu name='FileAction' action='FileAction'><menuitem name='OpenAction' action='OpenAction'/><menuitem name='ExportAction' action='ExportAction'/><separator/><menuitem name='QuitAction' action='QuitAction'/></menu><menu name='EditAction' action='EditAction'/><menu name='ViewAction' action='ViewAction'><menuitem name='ShowFoundCachesAction' action='ShowFoundCachesAction'/><menuitem name='ShowUnavailableCachesAction' action='ShowUnavailableCachesAction'/><menuitem name='ShowArchivedCachesAction' action='ShowArchivedCachesAction'/><menuitem name='ShowCachesPlacedByMeAction' action='ShowCachesPlacedByMeAction'/><separator/><menuitem name='FilterAction' action='FilterAction'/><menuitem name='ClearAllFiltersAction' action='ClearAllFiltersAction'/></menu><menu name='HelpAction' action='HelpAction'><menuitem name='AboutAction' action='AboutAction'/></menu></menubar></ui>");
        this.mainmenubar = ((Gtk.MenuBar)(this.UIManager.GetWidget("/mainmenubar")));
        this.mainmenubar.Name = "mainmenubar";
        this.vbox1.Add(this.mainmenubar);
        Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.vbox1[this.mainmenubar]));
        w2.Position = 0;
        w2.Expand = false;
        w2.Fill = false;
        // Container child vbox1.Gtk.Box+BoxChild
        this.UIManager.AddUiFromString("<ui><toolbar name='toolbar1'><toolitem name='openAction1' action='openAction1'/></toolbar></ui>");
        this.toolbar1 = ((Gtk.Toolbar)(this.UIManager.GetWidget("/toolbar1")));
        this.toolbar1.Name = "toolbar1";
        this.toolbar1.ShowArrow = false;
        this.toolbar1.ToolbarStyle = ((Gtk.ToolbarStyle)(0));
        this.toolbar1.IconSize = ((Gtk.IconSize)(3));
        this.vbox1.Add(this.toolbar1);
        Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.vbox1[this.toolbar1]));
        w3.Position = 1;
        w3.Expand = false;
        w3.Fill = false;
        // Container child vbox1.Gtk.Box+BoxChild
        this.hSplitPane = new Gtk.HPaned();
        this.hSplitPane.CanFocus = true;
        this.hSplitPane.Name = "hSplitPane";
        this.hSplitPane.Position = 398;
        // Container child hSplitPane.Gtk.Paned+PanedChild
        this.cacheList = new ocmgtk.CacheList();
        this.cacheList.Events = ((Gdk.EventMask)(256));
        this.cacheList.Name = "cacheList";
        this.hSplitPane.Add(this.cacheList);
        Gtk.Paned.PanedChild w4 = ((Gtk.Paned.PanedChild)(this.hSplitPane[this.cacheList]));
        w4.Resize = false;
        // Container child hSplitPane.Gtk.Paned+PanedChild
        this.cachePane = new ocmgtk.GeoCachePane();
        this.cachePane.Events = ((Gdk.EventMask)(256));
        this.cachePane.Name = "cachePane";
        this.hSplitPane.Add(this.cachePane);
        this.vbox1.Add(this.hSplitPane);
        Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.vbox1[this.hSplitPane]));
        w6.Position = 2;
        // Container child vbox1.Gtk.Box+BoxChild
        this.statusbar1 = new Gtk.Statusbar();
        this.statusbar1.Name = "statusbar1";
        this.statusbar1.Spacing = 6;
        this.vbox1.Add(this.statusbar1);
        Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(this.vbox1[this.statusbar1]));
        w7.PackType = ((Gtk.PackType)(1));
        w7.Position = 3;
        w7.Expand = false;
        w7.Fill = false;
        this.Add(this.vbox1);
        if ((this.Child != null)) {
            this.Child.ShowAll();
        }
        this.DefaultWidth = 1073;
        this.DefaultHeight = 988;
        this.Show();
        this.DeleteEvent += new Gtk.DeleteEventHandler(this.OnDeleteEvent);
        this.QuitAction.Activated += new System.EventHandler(this.OnQuit);
        this.AboutAction.Activated += new System.EventHandler(this.doAbout);
        this.ShowUnavailableCachesAction.Toggled += new System.EventHandler(this.OnToggleUnavailable);
        this.ShowArchivedCachesAction.Toggled += new System.EventHandler(this.OnToggleArchive);
        this.ShowCachesPlacedByMeAction.Toggled += new System.EventHandler(this.OnToggleMine);
        this.ShowFoundCachesAction.Toggled += new System.EventHandler(this.OnToggleFound);
    }
}
