// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ocmgtk {
    
    
    public partial class ExportGPXDialog {
        
        private Gtk.Table table2;
        
        private Gtk.FileChooserButton filechooserbutton3;
        
        private Gtk.Label label2;
        
        private Gtk.CheckButton limitCheck;
        
        private Gtk.Entry limitEntry;
        
        private Gtk.Frame paperlessFrame;
        
        private Gtk.Alignment GtkAlignment3;
        
        private Gtk.Table table5;
        
        private Gtk.CheckButton attrCheck;
        
        private Gtk.CheckButton logLimitCheck;
        
        private Gtk.Entry logLimitEntry;
        
        private Gtk.CheckButton usePlainTextCheck;
        
        private Gtk.Label GtkLabel7;
        
        private Gtk.RadioButton radiobutton4;
        
        private Gtk.RadioButton radiobutton5;
        
        private Gtk.Frame waypointFrame;
        
        private Gtk.Alignment GtkAlignment2;
        
        private Gtk.Table table3;
        
        private Gtk.ComboBox descMode;
        
        private Gtk.Label label1;
        
        private Gtk.Label label3;
        
        private Gtk.ComboBox nameMode;
        
        private Gtk.Label GtkLabel5;
        
        private Gtk.Button buttonCancel;
        
        private Gtk.Button buttonOk;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget ocmgtk.ExportGPXDialog
            this.Name = "ocmgtk.ExportGPXDialog";
            this.Title = Mono.Unix.Catalog.GetString("Export GPX...");
            this.TypeHint = ((Gdk.WindowTypeHint)(1));
            this.WindowPosition = ((Gtk.WindowPosition)(4));
            this.BorderWidth = ((uint)(6));
            // Internal child ocmgtk.ExportGPXDialog.VBox
            Gtk.VBox w1 = this.VBox;
            w1.Name = "dialog1_VBox";
            w1.BorderWidth = ((uint)(2));
            // Container child dialog1_VBox.Gtk.Box+BoxChild
            this.table2 = new Gtk.Table(((uint)(6)), ((uint)(2)), false);
            this.table2.Name = "table2";
            this.table2.RowSpacing = ((uint)(6));
            this.table2.ColumnSpacing = ((uint)(6));
            // Container child table2.Gtk.Table+TableChild
            this.filechooserbutton3 = new Gtk.FileChooserButton(Mono.Unix.Catalog.GetString("Select A File"), ((Gtk.FileChooserAction)(0)));
            this.filechooserbutton3.Name = "filechooserbutton3";
            this.table2.Add(this.filechooserbutton3);
            Gtk.Table.TableChild w2 = ((Gtk.Table.TableChild)(this.table2[this.filechooserbutton3]));
            w2.LeftAttach = ((uint)(1));
            w2.RightAttach = ((uint)(2));
            w2.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table2.Gtk.Table+TableChild
            this.label2 = new Gtk.Label();
            this.label2.Name = "label2";
            this.label2.Xalign = 0F;
            this.label2.LabelProp = Mono.Unix.Catalog.GetString("File:");
            this.table2.Add(this.label2);
            Gtk.Table.TableChild w3 = ((Gtk.Table.TableChild)(this.table2[this.label2]));
            w3.XOptions = ((Gtk.AttachOptions)(4));
            w3.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table2.Gtk.Table+TableChild
            this.limitCheck = new Gtk.CheckButton();
            this.limitCheck.CanFocus = true;
            this.limitCheck.Name = "limitCheck";
            this.limitCheck.Label = Mono.Unix.Catalog.GetString("Limit Number of Geocaches");
            this.limitCheck.Active = true;
            this.limitCheck.DrawIndicator = true;
            this.limitCheck.UseUnderline = true;
            this.table2.Add(this.limitCheck);
            Gtk.Table.TableChild w4 = ((Gtk.Table.TableChild)(this.table2[this.limitCheck]));
            w4.TopAttach = ((uint)(1));
            w4.BottomAttach = ((uint)(2));
            w4.XOptions = ((Gtk.AttachOptions)(4));
            w4.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table2.Gtk.Table+TableChild
            this.limitEntry = new Gtk.Entry();
            this.limitEntry.CanFocus = true;
            this.limitEntry.Name = "limitEntry";
            this.limitEntry.Text = "1000";
            this.limitEntry.IsEditable = true;
            this.limitEntry.InvisibleChar = '•';
            this.table2.Add(this.limitEntry);
            Gtk.Table.TableChild w5 = ((Gtk.Table.TableChild)(this.table2[this.limitEntry]));
            w5.TopAttach = ((uint)(1));
            w5.BottomAttach = ((uint)(2));
            w5.LeftAttach = ((uint)(1));
            w5.RightAttach = ((uint)(2));
            w5.XOptions = ((Gtk.AttachOptions)(4));
            w5.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table2.Gtk.Table+TableChild
            this.paperlessFrame = new Gtk.Frame();
            this.paperlessFrame.Name = "paperlessFrame";
            this.paperlessFrame.ShadowType = ((Gtk.ShadowType)(1));
            // Container child paperlessFrame.Gtk.Container+ContainerChild
            this.GtkAlignment3 = new Gtk.Alignment(0F, 0F, 1F, 1F);
            this.GtkAlignment3.Name = "GtkAlignment3";
            this.GtkAlignment3.LeftPadding = ((uint)(12));
            // Container child GtkAlignment3.Gtk.Container+ContainerChild
            this.table5 = new Gtk.Table(((uint)(3)), ((uint)(2)), false);
            this.table5.Name = "table5";
            this.table5.RowSpacing = ((uint)(6));
            this.table5.ColumnSpacing = ((uint)(6));
            this.table5.BorderWidth = ((uint)(6));
            // Container child table5.Gtk.Table+TableChild
            this.attrCheck = new Gtk.CheckButton();
            this.attrCheck.CanFocus = true;
            this.attrCheck.Name = "attrCheck";
            this.attrCheck.Label = Mono.Unix.Catalog.GetString("Include Attributes in Description");
            this.attrCheck.Active = true;
            this.attrCheck.DrawIndicator = true;
            this.attrCheck.UseUnderline = true;
            this.table5.Add(this.attrCheck);
            Gtk.Table.TableChild w6 = ((Gtk.Table.TableChild)(this.table5[this.attrCheck]));
            w6.TopAttach = ((uint)(1));
            w6.BottomAttach = ((uint)(2));
            w6.RightAttach = ((uint)(2));
            w6.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table5.Gtk.Table+TableChild
            this.logLimitCheck = new Gtk.CheckButton();
            this.logLimitCheck.CanFocus = true;
            this.logLimitCheck.Name = "logLimitCheck";
            this.logLimitCheck.Label = Mono.Unix.Catalog.GetString("Limit Number of Logs");
            this.logLimitCheck.Active = true;
            this.logLimitCheck.DrawIndicator = true;
            this.logLimitCheck.UseUnderline = true;
            this.table5.Add(this.logLimitCheck);
            Gtk.Table.TableChild w7 = ((Gtk.Table.TableChild)(this.table5[this.logLimitCheck]));
            w7.XOptions = ((Gtk.AttachOptions)(4));
            w7.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table5.Gtk.Table+TableChild
            this.logLimitEntry = new Gtk.Entry();
            this.logLimitEntry.CanFocus = true;
            this.logLimitEntry.Name = "logLimitEntry";
            this.logLimitEntry.Text = Mono.Unix.Catalog.GetString("5");
            this.logLimitEntry.IsEditable = true;
            this.logLimitEntry.InvisibleChar = '•';
            this.table5.Add(this.logLimitEntry);
            Gtk.Table.TableChild w8 = ((Gtk.Table.TableChild)(this.table5[this.logLimitEntry]));
            w8.LeftAttach = ((uint)(1));
            w8.RightAttach = ((uint)(2));
            w8.XOptions = ((Gtk.AttachOptions)(4));
            w8.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table5.Gtk.Table+TableChild
            this.usePlainTextCheck = new Gtk.CheckButton();
            this.usePlainTextCheck.CanFocus = true;
            this.usePlainTextCheck.Name = "usePlainTextCheck";
            this.usePlainTextCheck.Label = Mono.Unix.Catalog.GetString("Convert HTML to Plain Text");
            this.usePlainTextCheck.DrawIndicator = true;
            this.usePlainTextCheck.UseUnderline = true;
            this.table5.Add(this.usePlainTextCheck);
            Gtk.Table.TableChild w9 = ((Gtk.Table.TableChild)(this.table5[this.usePlainTextCheck]));
            w9.TopAttach = ((uint)(2));
            w9.BottomAttach = ((uint)(3));
            w9.RightAttach = ((uint)(2));
            w9.XOptions = ((Gtk.AttachOptions)(4));
            w9.YOptions = ((Gtk.AttachOptions)(4));
            this.GtkAlignment3.Add(this.table5);
            this.paperlessFrame.Add(this.GtkAlignment3);
            this.GtkLabel7 = new Gtk.Label();
            this.GtkLabel7.Name = "GtkLabel7";
            this.GtkLabel7.LabelProp = Mono.Unix.Catalog.GetString("<b>Paperless Options</b>");
            this.GtkLabel7.UseMarkup = true;
            this.paperlessFrame.LabelWidget = this.GtkLabel7;
            this.table2.Add(this.paperlessFrame);
            Gtk.Table.TableChild w12 = ((Gtk.Table.TableChild)(this.table2[this.paperlessFrame]));
            w12.TopAttach = ((uint)(5));
            w12.BottomAttach = ((uint)(6));
            w12.RightAttach = ((uint)(2));
            w12.XOptions = ((Gtk.AttachOptions)(4));
            w12.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table2.Gtk.Table+TableChild
            this.radiobutton4 = new Gtk.RadioButton(Mono.Unix.Catalog.GetString("Export Paperless Caching Details"));
            this.radiobutton4.CanFocus = true;
            this.radiobutton4.Name = "radiobutton4";
            this.radiobutton4.DrawIndicator = true;
            this.radiobutton4.UseUnderline = true;
            this.radiobutton4.Group = new GLib.SList(System.IntPtr.Zero);
            this.table2.Add(this.radiobutton4);
            Gtk.Table.TableChild w13 = ((Gtk.Table.TableChild)(this.table2[this.radiobutton4]));
            w13.TopAttach = ((uint)(2));
            w13.BottomAttach = ((uint)(3));
            w13.RightAttach = ((uint)(2));
            w13.XOptions = ((Gtk.AttachOptions)(4));
            w13.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table2.Gtk.Table+TableChild
            this.radiobutton5 = new Gtk.RadioButton(Mono.Unix.Catalog.GetString("Export as Waypoints"));
            this.radiobutton5.CanFocus = true;
            this.radiobutton5.Name = "radiobutton5";
            this.radiobutton5.DrawIndicator = true;
            this.radiobutton5.UseUnderline = true;
            this.radiobutton5.Group = this.radiobutton4.Group;
            this.table2.Add(this.radiobutton5);
            Gtk.Table.TableChild w14 = ((Gtk.Table.TableChild)(this.table2[this.radiobutton5]));
            w14.TopAttach = ((uint)(3));
            w14.BottomAttach = ((uint)(4));
            w14.RightAttach = ((uint)(2));
            w14.XOptions = ((Gtk.AttachOptions)(4));
            w14.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table2.Gtk.Table+TableChild
            this.waypointFrame = new Gtk.Frame();
            this.waypointFrame.Name = "waypointFrame";
            this.waypointFrame.ShadowType = ((Gtk.ShadowType)(1));
            // Container child waypointFrame.Gtk.Container+ContainerChild
            this.GtkAlignment2 = new Gtk.Alignment(0F, 0F, 1F, 1F);
            this.GtkAlignment2.Name = "GtkAlignment2";
            this.GtkAlignment2.LeftPadding = ((uint)(12));
            // Container child GtkAlignment2.Gtk.Container+ContainerChild
            this.table3 = new Gtk.Table(((uint)(2)), ((uint)(2)), false);
            this.table3.Name = "table3";
            this.table3.RowSpacing = ((uint)(6));
            this.table3.ColumnSpacing = ((uint)(6));
            this.table3.BorderWidth = ((uint)(6));
            // Container child table3.Gtk.Table+TableChild
            this.descMode = Gtk.ComboBox.NewText();
            this.descMode.AppendText(Mono.Unix.Catalog.GetString("Cache Name"));
            this.descMode.AppendText(Mono.Unix.Catalog.GetString("Cache Code/Size/Hint"));
            this.descMode.AppendText(Mono.Unix.Catalog.GetString("Cache Code/Size/Type"));
            this.descMode.Name = "descMode";
            this.descMode.Active = 0;
            this.table3.Add(this.descMode);
            Gtk.Table.TableChild w15 = ((Gtk.Table.TableChild)(this.table3[this.descMode]));
            w15.TopAttach = ((uint)(1));
            w15.BottomAttach = ((uint)(2));
            w15.LeftAttach = ((uint)(1));
            w15.RightAttach = ((uint)(2));
            w15.XOptions = ((Gtk.AttachOptions)(4));
            w15.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table3.Gtk.Table+TableChild
            this.label1 = new Gtk.Label();
            this.label1.Name = "label1";
            this.label1.Xalign = 0F;
            this.label1.LabelProp = Mono.Unix.Catalog.GetString("Waypoint Name Format:");
            this.table3.Add(this.label1);
            Gtk.Table.TableChild w16 = ((Gtk.Table.TableChild)(this.table3[this.label1]));
            w16.XOptions = ((Gtk.AttachOptions)(4));
            w16.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table3.Gtk.Table+TableChild
            this.label3 = new Gtk.Label();
            this.label3.Name = "label3";
            this.label3.Xalign = 0F;
            this.label3.LabelProp = Mono.Unix.Catalog.GetString("Waypoint Description Format:");
            this.table3.Add(this.label3);
            Gtk.Table.TableChild w17 = ((Gtk.Table.TableChild)(this.table3[this.label3]));
            w17.TopAttach = ((uint)(1));
            w17.BottomAttach = ((uint)(2));
            w17.XOptions = ((Gtk.AttachOptions)(4));
            w17.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table3.Gtk.Table+TableChild
            this.nameMode = Gtk.ComboBox.NewText();
            this.nameMode.AppendText(Mono.Unix.Catalog.GetString("Cache Code"));
            this.nameMode.AppendText(Mono.Unix.Catalog.GetString("Cache Name"));
            this.nameMode.Name = "nameMode";
            this.nameMode.Active = 0;
            this.table3.Add(this.nameMode);
            Gtk.Table.TableChild w18 = ((Gtk.Table.TableChild)(this.table3[this.nameMode]));
            w18.LeftAttach = ((uint)(1));
            w18.RightAttach = ((uint)(2));
            w18.XOptions = ((Gtk.AttachOptions)(4));
            w18.YOptions = ((Gtk.AttachOptions)(4));
            this.GtkAlignment2.Add(this.table3);
            this.waypointFrame.Add(this.GtkAlignment2);
            this.GtkLabel5 = new Gtk.Label();
            this.GtkLabel5.Name = "GtkLabel5";
            this.GtkLabel5.LabelProp = Mono.Unix.Catalog.GetString("<b>Waypoint Options</b>");
            this.GtkLabel5.UseMarkup = true;
            this.waypointFrame.LabelWidget = this.GtkLabel5;
            this.table2.Add(this.waypointFrame);
            Gtk.Table.TableChild w21 = ((Gtk.Table.TableChild)(this.table2[this.waypointFrame]));
            w21.TopAttach = ((uint)(4));
            w21.BottomAttach = ((uint)(5));
            w21.RightAttach = ((uint)(2));
            w1.Add(this.table2);
            Gtk.Box.BoxChild w22 = ((Gtk.Box.BoxChild)(w1[this.table2]));
            w22.Position = 0;
            // Internal child ocmgtk.ExportGPXDialog.ActionArea
            Gtk.HButtonBox w23 = this.ActionArea;
            w23.Name = "dialog1_ActionArea";
            w23.Spacing = 10;
            w23.BorderWidth = ((uint)(5));
            w23.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonCancel = new Gtk.Button();
            this.buttonCancel.CanDefault = true;
            this.buttonCancel.CanFocus = true;
            this.buttonCancel.Name = "buttonCancel";
            this.buttonCancel.UseStock = true;
            this.buttonCancel.UseUnderline = true;
            this.buttonCancel.Label = "gtk-cancel";
            this.AddActionWidget(this.buttonCancel, -6);
            Gtk.ButtonBox.ButtonBoxChild w24 = ((Gtk.ButtonBox.ButtonBoxChild)(w23[this.buttonCancel]));
            w24.Expand = false;
            w24.Fill = false;
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonOk = new Gtk.Button();
            this.buttonOk.CanDefault = true;
            this.buttonOk.CanFocus = true;
            this.buttonOk.Name = "buttonOk";
            this.buttonOk.UseStock = true;
            this.buttonOk.UseUnderline = true;
            this.buttonOk.Label = "gtk-ok";
            this.AddActionWidget(this.buttonOk, -5);
            Gtk.ButtonBox.ButtonBoxChild w25 = ((Gtk.ButtonBox.ButtonBoxChild)(w23[this.buttonOk]));
            w25.Position = 1;
            w25.Expand = false;
            w25.Fill = false;
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 408;
            this.DefaultHeight = 435;
            this.Show();
        }
    }
}
