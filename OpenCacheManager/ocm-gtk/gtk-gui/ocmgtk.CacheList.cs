// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ocmgtk {
    
    
    public partial class CacheList {
        
        private Gtk.UIManager UIManager;
        
        private Gtk.Action FilterAction;
        
        private Gtk.VBox vbox2;
        
        private Gtk.HBox hbox3;
        
        private Gtk.Image image19;
        
        private Gtk.Entry filterEntry;
        
        private Gtk.Button button154;
        
        private Gtk.Image image17;
        
        private Gtk.HBox hbox2;
        
        private Gtk.Image image23;
        
        private Gtk.Entry distanceEntry;
        
        private Gtk.Label distLabel;
        
        private Gtk.Button button136;
        
        private Gtk.Image image16;
        
        private Gtk.EventBox advancedBox;
        
        private Gtk.HBox infoHbox;
        
        private Gtk.Image image2;
        
        private Gtk.Button infoPane;
        
        private Gtk.Label label2;
        
        private Gtk.Table table1;
        
        private Gtk.CheckButton ArchivedButton;
        
        private Gtk.CheckButton checkbutton1;
        
        private Gtk.CheckButton checkbutton2;
        
        private Gtk.CheckButton FoundButton;
        
        private Gtk.CheckButton MineButton;
        
        private Gtk.CheckButton UnavailableButton;
        
        private Gtk.ScrolledWindow cachescroll;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget ocmgtk.CacheList
            Stetic.BinContainer w1 = Stetic.BinContainer.Attach(this);
            this.UIManager = new Gtk.UIManager();
            Gtk.ActionGroup w2 = new Gtk.ActionGroup("Default");
            this.FilterAction = new Gtk.Action("FilterAction", Mono.Unix.Catalog.GetString("Filter"), null, null);
            this.FilterAction.ShortLabel = Mono.Unix.Catalog.GetString("Filter");
            w2.Add(this.FilterAction, null);
            this.UIManager.InsertActionGroup(w2, 0);
            this.Name = "ocmgtk.CacheList";
            // Container child ocmgtk.CacheList.Gtk.Container+ContainerChild
            this.vbox2 = new Gtk.VBox();
            this.vbox2.Name = "vbox2";
            this.vbox2.Spacing = 6;
            this.vbox2.BorderWidth = ((uint)(6));
            // Container child vbox2.Gtk.Box+BoxChild
            this.hbox3 = new Gtk.HBox();
            this.hbox3.Name = "hbox3";
            this.hbox3.Spacing = 6;
            // Container child hbox3.Gtk.Box+BoxChild
            this.image19 = new Gtk.Image();
            this.image19.Name = "image19";
            this.image19.Pixbuf = Gdk.Pixbuf.LoadFromResource("ocmgtk.icons.scalable.SearchIcon.svg");
            this.hbox3.Add(this.image19);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.hbox3[this.image19]));
            w3.Position = 0;
            w3.Expand = false;
            w3.Fill = false;
            // Container child hbox3.Gtk.Box+BoxChild
            this.filterEntry = new Gtk.Entry();
            this.filterEntry.TooltipMarkup = "Type here to filter on cache name or code";
            this.filterEntry.CanFocus = true;
            this.filterEntry.Name = "filterEntry";
            this.filterEntry.IsEditable = true;
            this.filterEntry.InvisibleChar = '●';
            this.hbox3.Add(this.filterEntry);
            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.hbox3[this.filterEntry]));
            w4.Position = 1;
            // Container child hbox3.Gtk.Box+BoxChild
            this.button154 = new Gtk.Button();
            this.button154.CanFocus = true;
            this.button154.Name = "button154";
            // Container child button154.Gtk.Container+ContainerChild
            this.image17 = new Gtk.Image();
            this.image17.Name = "image17";
            this.image17.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-clear", Gtk.IconSize.Menu, 16);
            this.button154.Add(this.image17);
            this.button154.Label = null;
            this.hbox3.Add(this.button154);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.hbox3[this.button154]));
            w6.Position = 2;
            w6.Expand = false;
            w6.Fill = false;
            this.vbox2.Add(this.hbox3);
            Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(this.vbox2[this.hbox3]));
            w7.Position = 0;
            w7.Expand = false;
            w7.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            this.hbox2 = new Gtk.HBox();
            this.hbox2.Name = "hbox2";
            this.hbox2.Spacing = 6;
            // Container child hbox2.Gtk.Box+BoxChild
            this.image23 = new Gtk.Image();
            this.image23.Name = "image23";
            this.image23.Pixbuf = Gdk.Pixbuf.LoadFromResource("ocmgtk.icons.scalable.DistIcon.svg");
            this.hbox2.Add(this.image23);
            Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(this.hbox2[this.image23]));
            w8.Position = 0;
            w8.Expand = false;
            w8.Fill = false;
            // Container child hbox2.Gtk.Box+BoxChild
            this.distanceEntry = new Gtk.Entry();
            this.distanceEntry.TooltipMarkup = "Type here to limit the cache list to a certain distance from your current center point";
            this.distanceEntry.CanFocus = true;
            this.distanceEntry.Name = "distanceEntry";
            this.distanceEntry.IsEditable = true;
            this.distanceEntry.WidthChars = 5;
            this.distanceEntry.InvisibleChar = '•';
            this.hbox2.Add(this.distanceEntry);
            Gtk.Box.BoxChild w9 = ((Gtk.Box.BoxChild)(this.hbox2[this.distanceEntry]));
            w9.Position = 1;
            // Container child hbox2.Gtk.Box+BoxChild
            this.distLabel = new Gtk.Label();
            this.distLabel.Name = "distLabel";
            this.distLabel.LabelProp = Mono.Unix.Catalog.GetString("km");
            this.hbox2.Add(this.distLabel);
            Gtk.Box.BoxChild w10 = ((Gtk.Box.BoxChild)(this.hbox2[this.distLabel]));
            w10.Position = 2;
            w10.Expand = false;
            w10.Fill = false;
            // Container child hbox2.Gtk.Box+BoxChild
            this.button136 = new Gtk.Button();
            this.button136.CanFocus = true;
            this.button136.Name = "button136";
            // Container child button136.Gtk.Container+ContainerChild
            this.image16 = new Gtk.Image();
            this.image16.Name = "image16";
            this.image16.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-clear", Gtk.IconSize.Menu, 16);
            this.button136.Add(this.image16);
            this.button136.Label = null;
            this.hbox2.Add(this.button136);
            Gtk.Box.BoxChild w12 = ((Gtk.Box.BoxChild)(this.hbox2[this.button136]));
            w12.Position = 3;
            w12.Expand = false;
            w12.Fill = false;
            this.vbox2.Add(this.hbox2);
            Gtk.Box.BoxChild w13 = ((Gtk.Box.BoxChild)(this.vbox2[this.hbox2]));
            w13.Position = 1;
            w13.Expand = false;
            w13.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            this.advancedBox = new Gtk.EventBox();
            this.advancedBox.Name = "advancedBox";
            // Container child advancedBox.Gtk.Container+ContainerChild
            this.infoHbox = new Gtk.HBox();
            this.infoHbox.Name = "infoHbox";
            this.infoHbox.Spacing = 6;
            this.infoHbox.BorderWidth = ((uint)(6));
            // Container child infoHbox.Gtk.Box+BoxChild
            this.image2 = new Gtk.Image();
            this.image2.Name = "image2";
            this.image2.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-dialog-info", Gtk.IconSize.Button, 20);
            this.infoHbox.Add(this.image2);
            Gtk.Box.BoxChild w14 = ((Gtk.Box.BoxChild)(this.infoHbox[this.image2]));
            w14.Position = 0;
            w14.Expand = false;
            w14.Fill = false;
            // Container child infoHbox.Gtk.Box+BoxChild
            this.infoPane = new Gtk.Button();
            this.infoPane.CanFocus = true;
            this.infoPane.Name = "infoPane";
            this.infoPane.Relief = ((Gtk.ReliefStyle)(2));
            // Container child infoPane.Gtk.Container+ContainerChild
            this.label2 = new Gtk.Label();
            this.label2.Name = "label2";
            this.label2.LabelProp = Mono.Unix.Catalog.GetString("<span fgcolor=\"blue\">Advanced filters</span> have been applied.");
            this.label2.UseMarkup = true;
            this.infoPane.Add(this.label2);
            this.infoPane.Label = null;
            this.infoHbox.Add(this.infoPane);
            Gtk.Box.BoxChild w16 = ((Gtk.Box.BoxChild)(this.infoHbox[this.infoPane]));
            w16.Position = 1;
            w16.Expand = false;
            w16.Fill = false;
            this.advancedBox.Add(this.infoHbox);
            this.vbox2.Add(this.advancedBox);
            Gtk.Box.BoxChild w18 = ((Gtk.Box.BoxChild)(this.vbox2[this.advancedBox]));
            w18.Position = 2;
            w18.Expand = false;
            w18.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            this.table1 = new Gtk.Table(((uint)(2)), ((uint)(3)), false);
            this.table1.Name = "table1";
            this.table1.RowSpacing = ((uint)(6));
            this.table1.ColumnSpacing = ((uint)(6));
            // Container child table1.Gtk.Table+TableChild
            this.ArchivedButton = new Gtk.CheckButton();
            this.ArchivedButton.CanFocus = true;
            this.ArchivedButton.Name = "ArchivedButton";
            this.ArchivedButton.Label = Mono.Unix.Catalog.GetString("Archived");
            this.ArchivedButton.Active = true;
            this.ArchivedButton.DrawIndicator = true;
            this.ArchivedButton.UseUnderline = true;
            this.table1.Add(this.ArchivedButton);
            Gtk.Table.TableChild w19 = ((Gtk.Table.TableChild)(this.table1[this.ArchivedButton]));
            w19.TopAttach = ((uint)(1));
            w19.BottomAttach = ((uint)(2));
            w19.LeftAttach = ((uint)(2));
            w19.RightAttach = ((uint)(3));
            w19.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.checkbutton1 = new Gtk.CheckButton();
            this.checkbutton1.CanFocus = true;
            this.checkbutton1.Name = "checkbutton1";
            this.checkbutton1.Label = Mono.Unix.Catalog.GetString("Not Found");
            this.checkbutton1.Active = true;
            this.checkbutton1.DrawIndicator = true;
            this.checkbutton1.UseUnderline = true;
            this.table1.Add(this.checkbutton1);
            Gtk.Table.TableChild w20 = ((Gtk.Table.TableChild)(this.table1[this.checkbutton1]));
            w20.LeftAttach = ((uint)(1));
            w20.RightAttach = ((uint)(2));
            w20.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.checkbutton2 = new Gtk.CheckButton();
            this.checkbutton2.CanFocus = true;
            this.checkbutton2.Name = "checkbutton2";
            this.checkbutton2.Label = Mono.Unix.Catalog.GetString("Available");
            this.checkbutton2.Active = true;
            this.checkbutton2.DrawIndicator = true;
            this.checkbutton2.UseUnderline = true;
            this.table1.Add(this.checkbutton2);
            Gtk.Table.TableChild w21 = ((Gtk.Table.TableChild)(this.table1[this.checkbutton2]));
            w21.TopAttach = ((uint)(1));
            w21.BottomAttach = ((uint)(2));
            w21.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.FoundButton = new Gtk.CheckButton();
            this.FoundButton.CanFocus = true;
            this.FoundButton.Name = "FoundButton";
            this.FoundButton.Label = Mono.Unix.Catalog.GetString("Found");
            this.FoundButton.Active = true;
            this.FoundButton.DrawIndicator = true;
            this.FoundButton.UseUnderline = true;
            this.table1.Add(this.FoundButton);
            Gtk.Table.TableChild w22 = ((Gtk.Table.TableChild)(this.table1[this.FoundButton]));
            w22.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.MineButton = new Gtk.CheckButton();
            this.MineButton.CanFocus = true;
            this.MineButton.Name = "MineButton";
            this.MineButton.Label = Mono.Unix.Catalog.GetString("Mine");
            this.MineButton.Active = true;
            this.MineButton.DrawIndicator = true;
            this.MineButton.UseUnderline = true;
            this.table1.Add(this.MineButton);
            Gtk.Table.TableChild w23 = ((Gtk.Table.TableChild)(this.table1[this.MineButton]));
            w23.LeftAttach = ((uint)(2));
            w23.RightAttach = ((uint)(3));
            w23.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.UnavailableButton = new Gtk.CheckButton();
            this.UnavailableButton.CanFocus = true;
            this.UnavailableButton.Name = "UnavailableButton";
            this.UnavailableButton.Label = Mono.Unix.Catalog.GetString("Disabled");
            this.UnavailableButton.Active = true;
            this.UnavailableButton.DrawIndicator = true;
            this.UnavailableButton.UseUnderline = true;
            this.table1.Add(this.UnavailableButton);
            Gtk.Table.TableChild w24 = ((Gtk.Table.TableChild)(this.table1[this.UnavailableButton]));
            w24.TopAttach = ((uint)(1));
            w24.BottomAttach = ((uint)(2));
            w24.LeftAttach = ((uint)(1));
            w24.RightAttach = ((uint)(2));
            w24.YOptions = ((Gtk.AttachOptions)(4));
            this.vbox2.Add(this.table1);
            Gtk.Box.BoxChild w25 = ((Gtk.Box.BoxChild)(this.vbox2[this.table1]));
            w25.Position = 3;
            w25.Expand = false;
            w25.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            this.cachescroll = new Gtk.ScrolledWindow();
            this.cachescroll.CanFocus = true;
            this.cachescroll.Name = "cachescroll";
            this.cachescroll.ShadowType = ((Gtk.ShadowType)(1));
            this.vbox2.Add(this.cachescroll);
            Gtk.Box.BoxChild w26 = ((Gtk.Box.BoxChild)(this.vbox2[this.cachescroll]));
            w26.Position = 4;
            this.Add(this.vbox2);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            w1.SetUiManager(UIManager);
            this.infoHbox.Hide();
            this.Hide();
            this.button154.Clicked += new System.EventHandler(this.OnClearClicked);
            this.button136.Clicked += new System.EventHandler(this.OnClearDistance);
            this.infoPane.Clicked += new System.EventHandler(this.OnFilterClick);
            this.UnavailableButton.Toggled += new System.EventHandler(this.OnUnavailableToggled);
            this.MineButton.Toggled += new System.EventHandler(this.OnMineToggled);
            this.FoundButton.Toggled += new System.EventHandler(this.OnFoundButtonToggled);
            this.checkbutton2.Toggled += new System.EventHandler(this.OnAvailableToggle);
            this.checkbutton1.Toggled += new System.EventHandler(this.OnNotFoundToggled);
            this.ArchivedButton.Toggled += new System.EventHandler(this.OnArchivedButtonToggled);
        }
    }
}
