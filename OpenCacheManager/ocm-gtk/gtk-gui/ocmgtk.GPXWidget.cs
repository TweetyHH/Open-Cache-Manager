// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ocmgtk {
    
    
    public partial class GPXWidget {
        
        private Gtk.VBox vbox3;
        
        private Gtk.Table table1;
        
        private Gtk.CheckButton limitCheck;
        
        private Gtk.Entry limitEntry;
        
        private Gtk.CheckButton logLimitCheck;
        
        private Gtk.Entry logLimitEntry;
        
        private Gtk.CheckButton attrCheck;
        
        private Gtk.HBox hbox4;
        
        private Gtk.Label label3;
        
        private Gtk.Entry fileEntry;
        
        private Gtk.Button fileButton;
        
        private Gtk.Image image3;
        
        private Gtk.HBox hbox5;
        
        private Gtk.Label label4;
        
        private Gtk.Entry fieldNotesEntry;
        
        private Gtk.Button fileButton1;
        
        private Gtk.Image image4;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget ocmgtk.GPXWidget
            Stetic.BinContainer.Attach(this);
            this.Name = "ocmgtk.GPXWidget";
            // Container child ocmgtk.GPXWidget.Gtk.Container+ContainerChild
            this.vbox3 = new Gtk.VBox();
            this.vbox3.Name = "vbox3";
            this.vbox3.Spacing = 6;
            this.vbox3.BorderWidth = ((uint)(6));
            // Container child vbox3.Gtk.Box+BoxChild
            this.table1 = new Gtk.Table(((uint)(2)), ((uint)(2)), false);
            this.table1.Name = "table1";
            this.table1.RowSpacing = ((uint)(6));
            this.table1.ColumnSpacing = ((uint)(6));
            // Container child table1.Gtk.Table+TableChild
            this.limitCheck = new Gtk.CheckButton();
            this.limitCheck.CanFocus = true;
            this.limitCheck.Name = "limitCheck";
            this.limitCheck.Label = Mono.Unix.Catalog.GetString("Limit Number of Caches");
            this.limitCheck.DrawIndicator = true;
            this.limitCheck.UseUnderline = true;
            this.table1.Add(this.limitCheck);
            Gtk.Table.TableChild w1 = ((Gtk.Table.TableChild)(this.table1[this.limitCheck]));
            w1.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.limitEntry = new Gtk.Entry();
            this.limitEntry.Sensitive = false;
            this.limitEntry.CanFocus = true;
            this.limitEntry.Name = "limitEntry";
            this.limitEntry.Text = "1000";
            this.limitEntry.IsEditable = true;
            this.limitEntry.InvisibleChar = '•';
            this.table1.Add(this.limitEntry);
            Gtk.Table.TableChild w2 = ((Gtk.Table.TableChild)(this.table1[this.limitEntry]));
            w2.LeftAttach = ((uint)(1));
            w2.RightAttach = ((uint)(2));
            w2.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.logLimitCheck = new Gtk.CheckButton();
            this.logLimitCheck.CanFocus = true;
            this.logLimitCheck.Name = "logLimitCheck";
            this.logLimitCheck.Label = Mono.Unix.Catalog.GetString("Limit Number of Logs");
            this.logLimitCheck.Active = true;
            this.logLimitCheck.DrawIndicator = true;
            this.logLimitCheck.UseUnderline = true;
            this.table1.Add(this.logLimitCheck);
            Gtk.Table.TableChild w3 = ((Gtk.Table.TableChild)(this.table1[this.logLimitCheck]));
            w3.TopAttach = ((uint)(1));
            w3.BottomAttach = ((uint)(2));
            w3.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.logLimitEntry = new Gtk.Entry();
            this.logLimitEntry.CanFocus = true;
            this.logLimitEntry.Name = "logLimitEntry";
            this.logLimitEntry.Text = Mono.Unix.Catalog.GetString("5");
            this.logLimitEntry.IsEditable = true;
            this.logLimitEntry.InvisibleChar = '•';
            this.table1.Add(this.logLimitEntry);
            Gtk.Table.TableChild w4 = ((Gtk.Table.TableChild)(this.table1[this.logLimitEntry]));
            w4.TopAttach = ((uint)(1));
            w4.BottomAttach = ((uint)(2));
            w4.LeftAttach = ((uint)(1));
            w4.RightAttach = ((uint)(2));
            w4.YOptions = ((Gtk.AttachOptions)(4));
            this.vbox3.Add(this.table1);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.vbox3[this.table1]));
            w5.Position = 0;
            w5.Expand = false;
            w5.Fill = false;
            // Container child vbox3.Gtk.Box+BoxChild
            this.attrCheck = new Gtk.CheckButton();
            this.attrCheck.CanFocus = true;
            this.attrCheck.Name = "attrCheck";
            this.attrCheck.Label = Mono.Unix.Catalog.GetString("Include Attributes in Description");
            this.attrCheck.Active = true;
            this.attrCheck.DrawIndicator = true;
            this.attrCheck.UseUnderline = true;
            this.vbox3.Add(this.attrCheck);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.vbox3[this.attrCheck]));
            w6.Position = 1;
            w6.Expand = false;
            w6.Fill = false;
            // Container child vbox3.Gtk.Box+BoxChild
            this.hbox4 = new Gtk.HBox();
            this.hbox4.Name = "hbox4";
            this.hbox4.Spacing = 6;
            // Container child hbox4.Gtk.Box+BoxChild
            this.label3 = new Gtk.Label();
            this.label3.Name = "label3";
            this.label3.LabelProp = Mono.Unix.Catalog.GetString("GPX Output File:");
            this.hbox4.Add(this.label3);
            Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(this.hbox4[this.label3]));
            w7.Position = 0;
            w7.Expand = false;
            w7.Fill = false;
            // Container child hbox4.Gtk.Box+BoxChild
            this.fileEntry = new Gtk.Entry();
            this.fileEntry.CanFocus = true;
            this.fileEntry.Name = "fileEntry";
            this.fileEntry.Text = "/media/GARMIN/Garmin/GPX/geocaches.gpx";
            this.fileEntry.IsEditable = true;
            this.fileEntry.InvisibleChar = '•';
            this.hbox4.Add(this.fileEntry);
            Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(this.hbox4[this.fileEntry]));
            w8.Position = 1;
            // Container child hbox4.Gtk.Box+BoxChild
            this.fileButton = new Gtk.Button();
            this.fileButton.CanFocus = true;
            this.fileButton.Name = "fileButton";
            // Container child fileButton.Gtk.Container+ContainerChild
            this.image3 = new Gtk.Image();
            this.image3.Name = "image3";
            this.image3.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-open", Gtk.IconSize.Menu, 16);
            this.fileButton.Add(this.image3);
            this.fileButton.Label = null;
            this.hbox4.Add(this.fileButton);
            Gtk.Box.BoxChild w10 = ((Gtk.Box.BoxChild)(this.hbox4[this.fileButton]));
            w10.Position = 2;
            w10.Expand = false;
            w10.Fill = false;
            this.vbox3.Add(this.hbox4);
            Gtk.Box.BoxChild w11 = ((Gtk.Box.BoxChild)(this.vbox3[this.hbox4]));
            w11.Position = 2;
            w11.Expand = false;
            w11.Fill = false;
            // Container child vbox3.Gtk.Box+BoxChild
            this.hbox5 = new Gtk.HBox();
            this.hbox5.Name = "hbox5";
            this.hbox5.Spacing = 6;
            // Container child hbox5.Gtk.Box+BoxChild
            this.label4 = new Gtk.Label();
            this.label4.Name = "label4";
            this.label4.LabelProp = Mono.Unix.Catalog.GetString("Field Notes File:");
            this.hbox5.Add(this.label4);
            Gtk.Box.BoxChild w12 = ((Gtk.Box.BoxChild)(this.hbox5[this.label4]));
            w12.Position = 0;
            w12.Expand = false;
            w12.Fill = false;
            // Container child hbox5.Gtk.Box+BoxChild
            this.fieldNotesEntry = new Gtk.Entry();
            this.fieldNotesEntry.CanFocus = true;
            this.fieldNotesEntry.Name = "fieldNotesEntry";
            this.fieldNotesEntry.Text = "/media/GARMIN/Garmin/geocache_visits.txt";
            this.fieldNotesEntry.IsEditable = true;
            this.fieldNotesEntry.InvisibleChar = '•';
            this.hbox5.Add(this.fieldNotesEntry);
            Gtk.Box.BoxChild w13 = ((Gtk.Box.BoxChild)(this.hbox5[this.fieldNotesEntry]));
            w13.Position = 1;
            // Container child hbox5.Gtk.Box+BoxChild
            this.fileButton1 = new Gtk.Button();
            this.fileButton1.CanFocus = true;
            this.fileButton1.Name = "fileButton1";
            // Container child fileButton1.Gtk.Container+ContainerChild
            this.image4 = new Gtk.Image();
            this.image4.Name = "image4";
            this.image4.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-open", Gtk.IconSize.Menu, 16);
            this.fileButton1.Add(this.image4);
            this.fileButton1.Label = null;
            this.hbox5.Add(this.fileButton1);
            Gtk.Box.BoxChild w15 = ((Gtk.Box.BoxChild)(this.hbox5[this.fileButton1]));
            w15.Position = 2;
            w15.Expand = false;
            w15.Fill = false;
            this.vbox3.Add(this.hbox5);
            Gtk.Box.BoxChild w16 = ((Gtk.Box.BoxChild)(this.vbox3[this.hbox5]));
            w16.Position = 3;
            w16.Expand = false;
            w16.Fill = false;
            this.Add(this.vbox3);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Hide();
            this.logLimitCheck.Toggled += new System.EventHandler(this.OnLogLimitToggle);
            this.limitCheck.Toggled += new System.EventHandler(this.OnLimitToggle);
            this.fileButton.Clicked += new System.EventHandler(this.OnFileClick);
            this.fileButton1.Clicked += new System.EventHandler(this.OnFieldFileClick);
        }
    }
}
