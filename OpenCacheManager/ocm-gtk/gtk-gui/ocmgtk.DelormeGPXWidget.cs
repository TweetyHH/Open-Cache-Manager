// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ocmgtk {
    
    
    public partial class DelormeGPXWidget {
        
        private Gtk.VBox vbox1;
        
        private Gtk.Table table1;
        
        private Gtk.CheckButton limitCheck;
        
        private Gtk.Entry limitEntry;
        
        private Gtk.CheckButton logLimitCheck;
        
        private Gtk.Entry logLimitEntry;
        
        private Gtk.Table table2;
        
        private Gtk.CheckButton attrCheck;
        
        private Gtk.RadioButton autoNameRado;
        
        private Gtk.Button fileButton;
        
        private Gtk.Image image3;
        
        private Gtk.Entry fileEntry;
        
        private Gtk.RadioButton useFileRadio;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget ocmgtk.DelormeGPXWidget
            Stetic.BinContainer.Attach(this);
            this.Name = "ocmgtk.DelormeGPXWidget";
            // Container child ocmgtk.DelormeGPXWidget.Gtk.Container+ContainerChild
            this.vbox1 = new Gtk.VBox();
            this.vbox1.Name = "vbox1";
            this.vbox1.Spacing = 6;
            // Container child vbox1.Gtk.Box+BoxChild
            this.table1 = new Gtk.Table(((uint)(2)), ((uint)(2)), false);
            this.table1.Name = "table1";
            this.table1.RowSpacing = ((uint)(6));
            this.table1.ColumnSpacing = ((uint)(6));
            // Container child table1.Gtk.Table+TableChild
            this.limitCheck = new Gtk.CheckButton();
            this.limitCheck.CanFocus = true;
            this.limitCheck.Name = "limitCheck";
            this.limitCheck.Label = Mono.Unix.Catalog.GetString("Limit Number of Caches");
            this.limitCheck.Active = true;
            this.limitCheck.DrawIndicator = true;
            this.limitCheck.UseUnderline = true;
            this.table1.Add(this.limitCheck);
            Gtk.Table.TableChild w1 = ((Gtk.Table.TableChild)(this.table1[this.limitCheck]));
            w1.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.limitEntry = new Gtk.Entry();
            this.limitEntry.CanFocus = true;
            this.limitEntry.Name = "limitEntry";
            this.limitEntry.Text = "1000";
            this.limitEntry.IsEditable = true;
            this.limitEntry.InvisibleChar = '•';
            this.table1.Add(this.limitEntry);
            Gtk.Table.TableChild w2 = ((Gtk.Table.TableChild)(this.table1[this.limitEntry]));
            w2.LeftAttach = ((uint)(1));
            w2.RightAttach = ((uint)(2));
            w2.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.logLimitCheck = new Gtk.CheckButton();
            this.logLimitCheck.CanFocus = true;
            this.logLimitCheck.Name = "logLimitCheck";
            this.logLimitCheck.Label = Mono.Unix.Catalog.GetString("Limit Number of Logs");
            this.logLimitCheck.DrawIndicator = true;
            this.logLimitCheck.UseUnderline = true;
            this.table1.Add(this.logLimitCheck);
            Gtk.Table.TableChild w3 = ((Gtk.Table.TableChild)(this.table1[this.logLimitCheck]));
            w3.TopAttach = ((uint)(1));
            w3.BottomAttach = ((uint)(2));
            w3.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.logLimitEntry = new Gtk.Entry();
            this.logLimitEntry.Sensitive = false;
            this.logLimitEntry.CanFocus = true;
            this.logLimitEntry.Name = "logLimitEntry";
            this.logLimitEntry.Text = Mono.Unix.Catalog.GetString("5");
            this.logLimitEntry.IsEditable = true;
            this.logLimitEntry.InvisibleChar = '•';
            this.table1.Add(this.logLimitEntry);
            Gtk.Table.TableChild w4 = ((Gtk.Table.TableChild)(this.table1[this.logLimitEntry]));
            w4.TopAttach = ((uint)(1));
            w4.BottomAttach = ((uint)(2));
            w4.LeftAttach = ((uint)(1));
            w4.RightAttach = ((uint)(2));
            w4.YOptions = ((Gtk.AttachOptions)(4));
            this.vbox1.Add(this.table1);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.vbox1[this.table1]));
            w5.Position = 0;
            w5.Expand = false;
            w5.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.table2 = new Gtk.Table(((uint)(3)), ((uint)(3)), false);
            this.table2.RowSpacing = ((uint)(6));
            this.table2.ColumnSpacing = ((uint)(6));
            // Container child table2.Gtk.Table+TableChild
            this.attrCheck = new Gtk.CheckButton();
            this.attrCheck.CanFocus = true;
            this.attrCheck.Name = "attrCheck";
            this.attrCheck.Label = Mono.Unix.Catalog.GetString("Include Attributes in Description");
            this.attrCheck.Active = true;
            this.attrCheck.DrawIndicator = true;
            this.attrCheck.UseUnderline = true;
            this.table2.Add(this.attrCheck);
            Gtk.Table.TableChild w6 = ((Gtk.Table.TableChild)(this.table2[this.attrCheck]));
            w6.RightAttach = ((uint)(2));
            w6.XOptions = ((Gtk.AttachOptions)(4));
            w6.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table2.Gtk.Table+TableChild
            this.autoNameRado = new Gtk.RadioButton(Mono.Unix.Catalog.GetString("Auto name on internal drive"));
            this.autoNameRado.CanFocus = true;
            this.autoNameRado.Name = "autoNameRado";
            this.autoNameRado.Active = true;
            this.autoNameRado.DrawIndicator = true;
            this.autoNameRado.UseUnderline = true;
            this.autoNameRado.Group = new GLib.SList(System.IntPtr.Zero);
            this.table2.Add(this.autoNameRado);
            Gtk.Table.TableChild w7 = ((Gtk.Table.TableChild)(this.table2[this.autoNameRado]));
            w7.TopAttach = ((uint)(1));
            w7.BottomAttach = ((uint)(2));
            w7.XOptions = ((Gtk.AttachOptions)(4));
            w7.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table2.Gtk.Table+TableChild
            this.fileButton = new Gtk.Button();
            this.fileButton.CanFocus = true;
            this.fileButton.Name = "fileButton";
            // Container child fileButton.Gtk.Container+ContainerChild
            this.image3 = new Gtk.Image();
            this.image3.Name = "image3";
            this.image3.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-open", Gtk.IconSize.Menu, 16);
            this.fileButton.Add(this.image3);
            this.fileButton.Label = null;
            this.table2.Add(this.fileButton);
            Gtk.Table.TableChild w9 = ((Gtk.Table.TableChild)(this.table2[this.fileButton]));
            w9.TopAttach = ((uint)(2));
            w9.BottomAttach = ((uint)(3));
            w9.LeftAttach = ((uint)(2));
            w9.RightAttach = ((uint)(3));
            w9.XOptions = ((Gtk.AttachOptions)(4));
            w9.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table2.Gtk.Table+TableChild
            this.fileEntry = new Gtk.Entry();
            this.fileEntry.Sensitive = false;
            this.fileEntry.CanFocus = true;
            this.fileEntry.Name = "fileEntry";
            this.fileEntry.Text = "/media/EM_USERMAPS/waypoints/geocaches.gpx";
            this.fileEntry.IsEditable = true;
            this.fileEntry.InvisibleChar = '•';
            this.table2.Add(this.fileEntry);
            Gtk.Table.TableChild w10 = ((Gtk.Table.TableChild)(this.table2[this.fileEntry]));
            w10.TopAttach = ((uint)(2));
            w10.BottomAttach = ((uint)(3));
            w10.LeftAttach = ((uint)(1));
            w10.RightAttach = ((uint)(2));
            w10.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table2.Gtk.Table+TableChild
            this.useFileRadio = new Gtk.RadioButton(Mono.Unix.Catalog.GetString("Use specified file:"));
            this.useFileRadio.CanFocus = true;
            this.useFileRadio.Name = "useFileRadio";
            this.useFileRadio.DrawIndicator = true;
            this.useFileRadio.UseUnderline = true;
            this.useFileRadio.Group = this.autoNameRado.Group;
            this.table2.Add(this.useFileRadio);
            Gtk.Table.TableChild w11 = ((Gtk.Table.TableChild)(this.table2[this.useFileRadio]));
            w11.TopAttach = ((uint)(2));
            w11.BottomAttach = ((uint)(3));
            w11.XOptions = ((Gtk.AttachOptions)(4));
            w11.YOptions = ((Gtk.AttachOptions)(4));
            this.vbox1.Add(this.table2);
            Gtk.Box.BoxChild w12 = ((Gtk.Box.BoxChild)(this.vbox1[this.table2]));
            w12.Position = 1;
            w12.Expand = false;
            w12.Fill = false;
            this.Add(this.vbox1);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Hide();
            this.logLimitCheck.Toggled += new System.EventHandler(this.OnLogLimitToggle);
            this.limitCheck.Toggled += new System.EventHandler(this.OnLimitToggle);
            this.useFileRadio.Toggled += new System.EventHandler(this.OnFileToggle);
            this.fileButton.Clicked += new System.EventHandler(this.OnFileClick);
        }
    }
}
