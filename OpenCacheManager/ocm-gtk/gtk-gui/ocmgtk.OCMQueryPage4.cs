// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ocmgtk {
    
    
    public partial class OCMQueryPage4 {
        
        private Gtk.Table table1;
        
        private Gtk.ComboBox childCombo;
        
        private Gtk.CheckButton hasChildCheck;
        
        private Gtk.CheckButton hasCorrectedCheck;
        
        private Gtk.CheckButton hasNoChildCheck;
        
        private Gtk.CheckButton hasNotesCheck;
        
        private Gtk.ComboBox noChildCombo;
        
        private Gtk.CheckButton noCorrectCheck;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget ocmgtk.OCMQueryPage4
            Stetic.BinContainer.Attach(this);
            this.Name = "ocmgtk.OCMQueryPage4";
            // Container child ocmgtk.OCMQueryPage4.Gtk.Container+ContainerChild
            this.table1 = new Gtk.Table(((uint)(5)), ((uint)(2)), false);
            this.table1.Name = "table1";
            this.table1.RowSpacing = ((uint)(6));
            this.table1.ColumnSpacing = ((uint)(6));
            this.table1.BorderWidth = ((uint)(6));
            // Container child table1.Gtk.Table+TableChild
            this.childCombo = Gtk.ComboBox.NewText();
            this.childCombo.AppendText(Mono.Unix.Catalog.GetString("Final Location"));
            this.childCombo.AppendText(Mono.Unix.Catalog.GetString("Parking Area"));
            this.childCombo.AppendText(Mono.Unix.Catalog.GetString("Question To Answer"));
            this.childCombo.AppendText(Mono.Unix.Catalog.GetString("Reference Point"));
            this.childCombo.AppendText(Mono.Unix.Catalog.GetString("Stages of a Multicache"));
            this.childCombo.AppendText(Mono.Unix.Catalog.GetString("Trailhead"));
            this.childCombo.AppendText(Mono.Unix.Catalog.GetString("Other"));
            this.childCombo.Sensitive = false;
            this.childCombo.Name = "childCombo";
            this.childCombo.Active = 0;
            this.table1.Add(this.childCombo);
            Gtk.Table.TableChild w1 = ((Gtk.Table.TableChild)(this.table1[this.childCombo]));
            w1.TopAttach = ((uint)(1));
            w1.BottomAttach = ((uint)(2));
            w1.LeftAttach = ((uint)(1));
            w1.RightAttach = ((uint)(2));
            w1.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.hasChildCheck = new Gtk.CheckButton();
            this.hasChildCheck.CanFocus = true;
            this.hasChildCheck.Name = "hasChildCheck";
            this.hasChildCheck.Label = Mono.Unix.Catalog.GetString("Has at least one child of type:");
            this.hasChildCheck.DrawIndicator = true;
            this.hasChildCheck.UseUnderline = true;
            this.table1.Add(this.hasChildCheck);
            Gtk.Table.TableChild w2 = ((Gtk.Table.TableChild)(this.table1[this.hasChildCheck]));
            w2.TopAttach = ((uint)(1));
            w2.BottomAttach = ((uint)(2));
            w2.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.hasCorrectedCheck = new Gtk.CheckButton();
            this.hasCorrectedCheck.CanFocus = true;
            this.hasCorrectedCheck.Name = "hasCorrectedCheck";
            this.hasCorrectedCheck.Label = Mono.Unix.Catalog.GetString("Has Corrected Coordinates");
            this.hasCorrectedCheck.DrawIndicator = true;
            this.hasCorrectedCheck.UseUnderline = true;
            this.table1.Add(this.hasCorrectedCheck);
            Gtk.Table.TableChild w3 = ((Gtk.Table.TableChild)(this.table1[this.hasCorrectedCheck]));
            w3.TopAttach = ((uint)(3));
            w3.BottomAttach = ((uint)(4));
            w3.RightAttach = ((uint)(2));
            w3.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.hasNoChildCheck = new Gtk.CheckButton();
            this.hasNoChildCheck.CanFocus = true;
            this.hasNoChildCheck.Name = "hasNoChildCheck";
            this.hasNoChildCheck.Label = Mono.Unix.Catalog.GetString("Does not have any children of type:");
            this.hasNoChildCheck.DrawIndicator = true;
            this.hasNoChildCheck.UseUnderline = true;
            this.table1.Add(this.hasNoChildCheck);
            Gtk.Table.TableChild w4 = ((Gtk.Table.TableChild)(this.table1[this.hasNoChildCheck]));
            w4.TopAttach = ((uint)(2));
            w4.BottomAttach = ((uint)(3));
            w4.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.hasNotesCheck = new Gtk.CheckButton();
            this.hasNotesCheck.CanFocus = true;
            this.hasNotesCheck.Name = "hasNotesCheck";
            this.hasNotesCheck.Label = Mono.Unix.Catalog.GetString("Has Notes");
            this.hasNotesCheck.DrawIndicator = true;
            this.hasNotesCheck.UseUnderline = true;
            this.table1.Add(this.hasNotesCheck);
            Gtk.Table.TableChild w5 = ((Gtk.Table.TableChild)(this.table1[this.hasNotesCheck]));
            w5.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.noChildCombo = Gtk.ComboBox.NewText();
            this.noChildCombo.AppendText(Mono.Unix.Catalog.GetString("Final Location"));
            this.noChildCombo.AppendText(Mono.Unix.Catalog.GetString("Parking Area"));
            this.noChildCombo.AppendText(Mono.Unix.Catalog.GetString("Question To Answer"));
            this.noChildCombo.AppendText(Mono.Unix.Catalog.GetString("Reference Point"));
            this.noChildCombo.AppendText(Mono.Unix.Catalog.GetString("Stages of a Multicache"));
            this.noChildCombo.AppendText(Mono.Unix.Catalog.GetString("Trailhead"));
            this.noChildCombo.AppendText(Mono.Unix.Catalog.GetString("Other"));
            this.noChildCombo.Sensitive = false;
            this.noChildCombo.Name = "noChildCombo";
            this.noChildCombo.Active = 0;
            this.table1.Add(this.noChildCombo);
            Gtk.Table.TableChild w6 = ((Gtk.Table.TableChild)(this.table1[this.noChildCombo]));
            w6.TopAttach = ((uint)(2));
            w6.BottomAttach = ((uint)(3));
            w6.LeftAttach = ((uint)(1));
            w6.RightAttach = ((uint)(2));
            w6.XOptions = ((Gtk.AttachOptions)(4));
            w6.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.noCorrectCheck = new Gtk.CheckButton();
            this.noCorrectCheck.CanFocus = true;
            this.noCorrectCheck.Name = "noCorrectCheck";
            this.noCorrectCheck.Label = Mono.Unix.Catalog.GetString("Does not have Corrected Coordinates");
            this.noCorrectCheck.DrawIndicator = true;
            this.noCorrectCheck.UseUnderline = true;
            this.table1.Add(this.noCorrectCheck);
            Gtk.Table.TableChild w7 = ((Gtk.Table.TableChild)(this.table1[this.noCorrectCheck]));
            w7.TopAttach = ((uint)(4));
            w7.BottomAttach = ((uint)(5));
            w7.RightAttach = ((uint)(2));
            w7.YOptions = ((Gtk.AttachOptions)(4));
            this.Add(this.table1);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Hide();
            this.hasNoChildCheck.Toggled += new System.EventHandler(this.OnHasNoChildToggle);
            this.hasChildCheck.Toggled += new System.EventHandler(this.OnHasChildToggle);
        }
    }
}
