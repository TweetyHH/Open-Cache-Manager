// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ocmgtk {
    
    
    public partial class GarminUSBWidget {
        
        private Gtk.VBox vbox2;
        
        private Gtk.Table table1;
        
        private Gtk.CheckButton limitCheck;
        
        private Gtk.Entry limitEntry;
        
        private Gtk.HBox hbox2;
        
        private Gtk.Image image2;
        
        private Gtk.Button hotPlugButton;
        
        private Gtk.Label label4;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget ocmgtk.GarminUSBWidget
            Stetic.BinContainer.Attach(this);
            this.Name = "ocmgtk.GarminUSBWidget";
            // Container child ocmgtk.GarminUSBWidget.Gtk.Container+ContainerChild
            this.vbox2 = new Gtk.VBox();
            this.vbox2.Name = "vbox2";
            this.vbox2.Spacing = 6;
            this.vbox2.BorderWidth = ((uint)(6));
            // Container child vbox2.Gtk.Box+BoxChild
            this.table1 = new Gtk.Table(((uint)(1)), ((uint)(2)), false);
            this.table1.Name = "table1";
            this.table1.RowSpacing = ((uint)(6));
            this.table1.ColumnSpacing = ((uint)(6));
            // Container child table1.Gtk.Table+TableChild
            this.limitCheck = new Gtk.CheckButton();
            this.limitCheck.CanFocus = true;
            this.limitCheck.Name = "limitCheck";
            this.limitCheck.Label = Mono.Unix.Catalog.GetString("Limit Number of Geocaches");
            this.limitCheck.Active = true;
            this.limitCheck.DrawIndicator = true;
            this.limitCheck.UseUnderline = true;
            this.table1.Add(this.limitCheck);
            Gtk.Table.TableChild w1 = ((Gtk.Table.TableChild)(this.table1[this.limitCheck]));
            w1.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.limitEntry = new Gtk.Entry();
            this.limitEntry.CanFocus = true;
            this.limitEntry.Name = "limitEntry";
            this.limitEntry.Text = "500";
            this.limitEntry.IsEditable = true;
            this.limitEntry.InvisibleChar = 'â€¢';
            this.table1.Add(this.limitEntry);
            Gtk.Table.TableChild w2 = ((Gtk.Table.TableChild)(this.table1[this.limitEntry]));
            w2.LeftAttach = ((uint)(1));
            w2.RightAttach = ((uint)(2));
            w2.YOptions = ((Gtk.AttachOptions)(4));
            this.vbox2.Add(this.table1);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.vbox2[this.table1]));
            w3.Position = 0;
            w3.Expand = false;
            w3.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            this.hbox2 = new Gtk.HBox();
            this.hbox2.Name = "hbox2";
            this.hbox2.Spacing = 6;
            // Container child hbox2.Gtk.Box+BoxChild
            this.image2 = new Gtk.Image();
            this.image2.Name = "image2";
            this.image2.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-dialog-warning", Gtk.IconSize.Menu, 16);
            this.hbox2.Add(this.image2);
            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.hbox2[this.image2]));
            w4.Position = 0;
            w4.Expand = false;
            w4.Fill = false;
            // Container child hbox2.Gtk.Box+BoxChild
            this.hotPlugButton = new Gtk.Button();
            this.hotPlugButton.CanFocus = true;
            this.hotPlugButton.Name = "hotPlugButton";
            this.hotPlugButton.Relief = ((Gtk.ReliefStyle)(2));
            // Container child hotPlugButton.Gtk.Container+ContainerChild
            this.label4 = new Gtk.Label();
            this.label4.Name = "label4";
            this.label4.LabelProp = Mono.Unix.Catalog.GetString("<b>Important:</b>  You may need to configure non-root access to\nUSB to allow OCM to write to your Garmin Device. See:\n<span fgcolor=\"blue\">http://www.gpsbabel.org/os/Linux_Hotplug.html</span>");
            this.label4.UseMarkup = true;
            this.hotPlugButton.Add(this.label4);
            this.hotPlugButton.Label = null;
            this.hbox2.Add(this.hotPlugButton);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.hbox2[this.hotPlugButton]));
            w6.Position = 1;
            w6.Expand = false;
            w6.Fill = false;
            this.vbox2.Add(this.hbox2);
            Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(this.vbox2[this.hbox2]));
            w7.Position = 1;
            w7.Expand = false;
            w7.Fill = false;
            this.Add(this.vbox2);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Hide();
            this.limitCheck.Toggled += new System.EventHandler(this.OnLimitToggle);
            this.hotPlugButton.Clicked += new System.EventHandler(this.OnHotplugClick);
        }
    }
}
