# Makefile.in generated by automake 1.11 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/ocm-gtk.in $(top_srcdir)/Makefile.include
subdir = ocm-gtk
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/expansions.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES = ocm-gtk
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkglibdir)" \
	"$(DESTDIR)$(commonapplicationdatarootmimepackagesdir)" \
	"$(DESTDIR)$(linuxdesktopapplicationsdir)" \
	"$(DESTDIR)$(linuxpkgconfigdir)" \
	"$(DESTDIR)$(programfilesdir)" \
	"$(DESTDIR)$(programfilesdocsdir)" \
	"$(DESTDIR)$(programfilesicons24x24dir)" \
	"$(DESTDIR)$(programfilesicons48x48dir)" \
	"$(DESTDIR)$(programfilesiconsscalabledir)" \
	"$(DESTDIR)$(programfileswebdir)"
SCRIPTS = $(bin_SCRIPTS) $(pkglib_SCRIPTS)
SOURCES =
DIST_SOURCES =
DATA = $(commonapplicationdatarootmimepackages_DATA) \
	$(linuxdesktopapplications_DATA) $(linuxpkgconfig_DATA) \
	$(programfiles_DATA) $(programfilesdocs_DATA) \
	$(programfilesicons24x24_DATA) $(programfilesicons48x48_DATA) \
	$(programfilesiconsscalable_DATA) $(programfilesweb_DATA)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
GCONF_SHARP_20_CFLAGS = @GCONF_SHARP_20_CFLAGS@
GCONF_SHARP_20_LIBS = @GCONF_SHARP_20_LIBS@
GLIB_SHARP_20_CFLAGS = @GLIB_SHARP_20_CFLAGS@
GLIB_SHARP_20_LIBS = @GLIB_SHARP_20_LIBS@
GMCS = @GMCS@
GTKHTML_SHARP_314_CFLAGS = @GTKHTML_SHARP_314_CFLAGS@
GTKHTML_SHARP_314_LIBS = @GTKHTML_SHARP_314_LIBS@
GTK_SHARP_20_CFLAGS = @GTK_SHARP_20_CFLAGS@
GTK_SHARP_20_LIBS = @GTK_SHARP_20_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NDESK_DBUS_10_CFLAGS = @NDESK_DBUS_10_CFLAGS@
NDESK_DBUS_10_LIBS = @NDESK_DBUS_10_LIBS@
NDESK_DBUS_GLIB_10_CFLAGS = @NDESK_DBUS_GLIB_10_CFLAGS@
NDESK_DBUS_GLIB_10_LIBS = @NDESK_DBUS_GLIB_10_LIBS@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
WEBKIT_SHARP_10_CFLAGS = @WEBKIT_SHARP_10_CFLAGS@
WEBKIT_SHARP_10_LIBS = @WEBKIT_SHARP_10_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
am__leading_dot = @am__leading_dot@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
expanded_bindir = @expanded_bindir@
expanded_datadir = @expanded_datadir@
expanded_libdir = @expanded_libdir@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
EXTRA_DIST = $(build_sources) $(build_resx_files) \
	$(build_others_files) $(ASSEMBLY_WRAPPER_IN) $(EXTRAS) \
	$(DATA_FILES) $(build_culture_res_files)

# Warning: This is an automatically generated file, do not edit!
@ENABLE_DEBUG_TRUE@ASSEMBLY_COMPILER_COMMAND = gmcs
@ENABLE_RELEASE_TRUE@ASSEMBLY_COMPILER_COMMAND = gmcs
@ENABLE_DEBUG_TRUE@ASSEMBLY_COMPILER_FLAGS = -noconfig -codepage:utf8 -warn:3 -optimize- -debug "-define:DEBUG"
@ENABLE_RELEASE_TRUE@ASSEMBLY_COMPILER_FLAGS = -noconfig -codepage:utf8 -warn:3 -optimize-
@ENABLE_DEBUG_TRUE@ASSEMBLY = bind/ocm-gtk.exe
@ENABLE_RELEASE_TRUE@ASSEMBLY = bin/ocm-gtk.exe
@ENABLE_DEBUG_TRUE@ASSEMBLY_MDB = $(ASSEMBLY).mdb
@ENABLE_RELEASE_TRUE@ASSEMBLY_MDB = 
@ENABLE_DEBUG_TRUE@COMPILE_TARGET = exe
@ENABLE_RELEASE_TRUE@COMPILE_TARGET = exe
@ENABLE_DEBUG_TRUE@PROJECT_REFERENCES = \
@ENABLE_DEBUG_TRUE@	../ocmengine/bin/Debug/ocmengine.dll

@ENABLE_RELEASE_TRUE@PROJECT_REFERENCES = \
@ENABLE_RELEASE_TRUE@	../ocmengine/bin/Debug/ocmengine.dll

@ENABLE_DEBUG_TRUE@BUILD_DIR = bind
@ENABLE_RELEASE_TRUE@BUILD_DIR = bin
@ENABLE_DEBUG_TRUE@OCM_DESKTOP_SOURCE = OCM.desktop
@ENABLE_RELEASE_TRUE@OCM_DESKTOP_SOURCE = OCM.desktop
@ENABLE_DEBUG_TRUE@X_GPX_XML_SOURCE = x-gpx.xml
@ENABLE_RELEASE_TRUE@X_GPX_XML_SOURCE = x-gpx.xml
@ENABLE_DEBUG_TRUE@X_OCM_XML_SOURCE = x-ocm.xml
@ENABLE_RELEASE_TRUE@X_OCM_XML_SOURCE = x-ocm.xml
@ENABLE_DEBUG_TRUE@OCMLOGO_SVG_SOURCE = icons/scalable/OCMLogo.svg
@ENABLE_RELEASE_TRUE@OCMLOGO_SVG_SOURCE = icons/scalable/OCMLogo.svg
@ENABLE_DEBUG_TRUE@CITO_SVG_SOURCE = icons/scalable/cito.svg
@ENABLE_RELEASE_TRUE@CITO_SVG_SOURCE = icons/scalable/cito.svg
@ENABLE_DEBUG_TRUE@EARTH_SVG_SOURCE = icons/scalable/earth.svg
@ENABLE_RELEASE_TRUE@EARTH_SVG_SOURCE = icons/scalable/earth.svg
@ENABLE_DEBUG_TRUE@FOUND_SVG_SOURCE = icons/scalable/found.svg
@ENABLE_RELEASE_TRUE@FOUND_SVG_SOURCE = icons/scalable/found.svg
@ENABLE_DEBUG_TRUE@HALFSTAR_SVG_SOURCE = icons/scalable/halfstar.svg
@ENABLE_RELEASE_TRUE@HALFSTAR_SVG_SOURCE = icons/scalable/halfstar.svg
@ENABLE_DEBUG_TRUE@LETTERBOX_SVG_SOURCE = icons/scalable/letterbox.svg
@ENABLE_RELEASE_TRUE@LETTERBOX_SVG_SOURCE = icons/scalable/letterbox.svg
@ENABLE_DEBUG_TRUE@MULTI_SVG_SOURCE = icons/scalable/multi.svg
@ENABLE_RELEASE_TRUE@MULTI_SVG_SOURCE = icons/scalable/multi.svg
@ENABLE_DEBUG_TRUE@OTHER_SVG_SOURCE = icons/scalable/other.svg
@ENABLE_RELEASE_TRUE@OTHER_SVG_SOURCE = icons/scalable/other.svg
@ENABLE_DEBUG_TRUE@STAR_SVG_SOURCE = icons/scalable/star.svg
@ENABLE_RELEASE_TRUE@STAR_SVG_SOURCE = icons/scalable/star.svg
@ENABLE_DEBUG_TRUE@STAR_EMPTY_SVG_SOURCE = icons/scalable/star_empty.svg
@ENABLE_RELEASE_TRUE@STAR_EMPTY_SVG_SOURCE = icons/scalable/star_empty.svg
@ENABLE_DEBUG_TRUE@UNKNOWN_SVG_SOURCE = icons/scalable/unknown.svg
@ENABLE_RELEASE_TRUE@UNKNOWN_SVG_SOURCE = icons/scalable/unknown.svg
@ENABLE_DEBUG_TRUE@WAYPOINT_FLAG_RED_SVG_SOURCE = icons/scalable/waypoint-flag-red.svg
@ENABLE_RELEASE_TRUE@WAYPOINT_FLAG_RED_SVG_SOURCE = icons/scalable/waypoint-flag-red.svg
@ENABLE_DEBUG_TRUE@WPT_VIEWER_HTML_SOURCE = web/wpt_viewer.html
@ENABLE_RELEASE_TRUE@WPT_VIEWER_HTML_SOURCE = web/wpt_viewer.html
@ENABLE_DEBUG_TRUE@EVENT_SVG_SOURCE = icons/scalable/event.svg
@ENABLE_RELEASE_TRUE@EVENT_SVG_SOURCE = icons/scalable/event.svg
@ENABLE_DEBUG_TRUE@MEGA_SVG_SOURCE = icons/scalable/mega.svg
@ENABLE_RELEASE_TRUE@MEGA_SVG_SOURCE = icons/scalable/mega.svg
@ENABLE_DEBUG_TRUE@VIRTUAL_SVG_SOURCE = icons/scalable/virtual.svg
@ENABLE_RELEASE_TRUE@VIRTUAL_SVG_SOURCE = icons/scalable/virtual.svg
@ENABLE_DEBUG_TRUE@WEBCAM_SVG_SOURCE = icons/scalable/webcam.svg
@ENABLE_RELEASE_TRUE@WEBCAM_SVG_SOURCE = icons/scalable/webcam.svg
@ENABLE_DEBUG_TRUE@WHERIGO_SVG_SOURCE = icons/scalable/wherigo.svg
@ENABLE_RELEASE_TRUE@WHERIGO_SVG_SOURCE = icons/scalable/wherigo.svg
@ENABLE_DEBUG_TRUE@CITO_PNG_SOURCE = icons/24x24/cito.png
@ENABLE_RELEASE_TRUE@CITO_PNG_SOURCE = icons/24x24/cito.png
@ENABLE_DEBUG_TRUE@EARTH_PNG_SOURCE = icons/24x24/earth.png
@ENABLE_RELEASE_TRUE@EARTH_PNG_SOURCE = icons/24x24/earth.png
@ENABLE_DEBUG_TRUE@EVENT_PNG_SOURCE = icons/24x24/event.png
@ENABLE_RELEASE_TRUE@EVENT_PNG_SOURCE = icons/24x24/event.png
@ENABLE_DEBUG_TRUE@LETTERBOX_PNG_SOURCE = icons/24x24/letterbox.png
@ENABLE_RELEASE_TRUE@LETTERBOX_PNG_SOURCE = icons/24x24/letterbox.png
@ENABLE_DEBUG_TRUE@MEGA_PNG_SOURCE = icons/24x24/mega.png
@ENABLE_RELEASE_TRUE@MEGA_PNG_SOURCE = icons/24x24/mega.png
@ENABLE_DEBUG_TRUE@MULTI_PNG_SOURCE = icons/24x24/multi.png
@ENABLE_RELEASE_TRUE@MULTI_PNG_SOURCE = icons/24x24/multi.png
@ENABLE_DEBUG_TRUE@OTHER_PNG_SOURCE = icons/24x24/other.png
@ENABLE_RELEASE_TRUE@OTHER_PNG_SOURCE = icons/24x24/other.png
@ENABLE_DEBUG_TRUE@OWNED_PNG_SOURCE = icons/24x24/owned.png
@ENABLE_RELEASE_TRUE@OWNED_PNG_SOURCE = icons/24x24/owned.png
@ENABLE_DEBUG_TRUE@TRADITIONAL_PNG_SOURCE = icons/24x24/traditional.png
@ENABLE_RELEASE_TRUE@TRADITIONAL_PNG_SOURCE = icons/24x24/traditional.png
@ENABLE_DEBUG_TRUE@UNKNOWN_PNG_SOURCE = icons/24x24/unknown.png
@ENABLE_RELEASE_TRUE@UNKNOWN_PNG_SOURCE = icons/24x24/unknown.png
@ENABLE_DEBUG_TRUE@VIRTUAL_PNG_SOURCE = icons/24x24/virtual.png
@ENABLE_RELEASE_TRUE@VIRTUAL_PNG_SOURCE = icons/24x24/virtual.png
@ENABLE_DEBUG_TRUE@WEBCAM_PNG_SOURCE = icons/24x24/webcam.png
@ENABLE_RELEASE_TRUE@WEBCAM_PNG_SOURCE = icons/24x24/webcam.png
@ENABLE_DEBUG_TRUE@WHERIGO_PNG_SOURCE = icons/24x24/wherigo.png
@ENABLE_RELEASE_TRUE@WHERIGO_PNG_SOURCE = icons/24x24/wherigo.png
@ENABLE_DEBUG_TRUE@CIRCLE_PNG_SOURCE = icons/48x48/circle.png
@ENABLE_RELEASE_TRUE@CIRCLE_PNG_SOURCE = icons/48x48/circle.png
@ENABLE_DEBUG_TRUE@PUSHPIN_PNG_SOURCE = icons/24x24/pushpin.png
@ENABLE_RELEASE_TRUE@PUSHPIN_PNG_SOURCE = icons/24x24/pushpin.png
@ENABLE_DEBUG_TRUE@FOUND_PNG_SOURCE = icons/24x24/found.png
@ENABLE_RELEASE_TRUE@FOUND_PNG_SOURCE = icons/24x24/found.png
@ENABLE_DEBUG_TRUE@TRADITIONAL_SVG_SOURCE = icons/scalable/traditional.svg
@ENABLE_RELEASE_TRUE@TRADITIONAL_SVG_SOURCE = icons/scalable/traditional.svg
@ENABLE_DEBUG_TRUE@BLUEPIN_PNG_SOURCE = icons/24x24/bluepin.png
@ENABLE_RELEASE_TRUE@BLUEPIN_PNG_SOURCE = icons/24x24/bluepin.png
@ENABLE_DEBUG_TRUE@PARKING_PNG_SOURCE = icons/24x24/parking.png
@ENABLE_RELEASE_TRUE@PARKING_PNG_SOURCE = icons/24x24/parking.png
@ENABLE_DEBUG_TRUE@TRAILHEAD_PNG_SOURCE = icons/24x24/trailhead.png
@ENABLE_RELEASE_TRUE@TRAILHEAD_PNG_SOURCE = icons/24x24/trailhead.png
@ENABLE_DEBUG_TRUE@BLUEPIN_SVG_SOURCE = icons/scalable/bluepin.svg
@ENABLE_RELEASE_TRUE@BLUEPIN_SVG_SOURCE = icons/scalable/bluepin.svg
@ENABLE_DEBUG_TRUE@PARKING_SVG_SOURCE = icons/scalable/parking.svg
@ENABLE_RELEASE_TRUE@PARKING_SVG_SOURCE = icons/scalable/parking.svg
@ENABLE_DEBUG_TRUE@TRAILHEAD_SVG_SOURCE = icons/scalable/trailhead.svg
@ENABLE_RELEASE_TRUE@TRAILHEAD_SVG_SOURCE = icons/scalable/trailhead.svg
@ENABLE_DEBUG_TRUE@LICENCE_TXT_SOURCE = docs/Licence.txt
@ENABLE_RELEASE_TRUE@LICENCE_TXT_SOURCE = docs/Licence.txt
@ENABLE_DEBUG_TRUE@CHANGEHISTORY_TXT_SOURCE = docs/ChangeHistory.txt
@ENABLE_RELEASE_TRUE@CHANGEHISTORY_TXT_SOURCE = docs/ChangeHistory.txt
@ENABLE_DEBUG_TRUE@README_TXT_SOURCE = docs/README.txt
@ENABLE_RELEASE_TRUE@README_TXT_SOURCE = docs/README.txt
@ENABLE_DEBUG_TRUE@OCMENGINE_DLL_SOURCE = ../ocmengine/bin/Debug/ocmengine.dll
@ENABLE_RELEASE_TRUE@OCMENGINE_DLL_SOURCE = ../ocmengine/bin/Debug/ocmengine.dll
@ENABLE_DEBUG_TRUE@OCMENGINE_DLL_MDB_SOURCE = ../ocmengine/bin/Debug/ocmengine.dll.mdb
@ENABLE_DEBUG_TRUE@OCMENGINE_DLL_MDB = $(BUILD_DIR)/ocmengine.dll.mdb
@ENABLE_RELEASE_TRUE@OCMENGINE_DLL_MDB = 
@ENABLE_DEBUG_TRUE@OCM_GTK_EXE_MDB_SOURCE = bind/ocm-gtk.exe.mdb
@ENABLE_DEBUG_TRUE@OCM_GTK_EXE_MDB = $(BUILD_DIR)/ocm-gtk.exe.mdb
@ENABLE_RELEASE_TRUE@OCM_GTK_EXE_MDB = 
AL = al2
SATELLITE_ASSEMBLY_NAME = $(notdir $(basename $(ASSEMBLY))).resources.dll
LINUX_DESKTOPAPPLICATIONS = \
	$(OCM_DESKTOP)  

COMMONAPPLICATIONDATAROOT_MIME_PACKAGES = \
	$(X_GPX_XML) \
	$(X_OCM_XML)  

PROGRAMFILES_ICONS_SCALABLE = \
	$(OCMLOGO_SVG) \
	$(CITO_SVG) \
	$(EARTH_SVG) \
	$(FOUND_SVG) \
	$(HALFSTAR_SVG) \
	$(LETTERBOX_SVG) \
	$(MULTI_SVG) \
	$(OTHER_SVG) \
	$(STAR_SVG) \
	$(STAR_EMPTY_SVG) \
	$(UNKNOWN_SVG) \
	$(WAYPOINT_FLAG_RED_SVG) \
	$(EVENT_SVG) \
	$(MEGA_SVG) \
	$(VIRTUAL_SVG) \
	$(WEBCAM_SVG) \
	$(WHERIGO_SVG) \
	$(TRADITIONAL_SVG) \
	$(BLUEPIN_SVG) \
	$(PARKING_SVG) \
	$(TRAILHEAD_SVG)  

PROGRAMFILES_WEB = \
	$(WPT_VIEWER_HTML)  

PROGRAMFILES_ICONS_24X24 = \
	$(CITO_PNG) \
	$(EARTH_PNG) \
	$(EVENT_PNG) \
	$(LETTERBOX_PNG) \
	$(MEGA_PNG) \
	$(MULTI_PNG) \
	$(OTHER_PNG) \
	$(OWNED_PNG) \
	$(TRADITIONAL_PNG) \
	$(UNKNOWN_PNG) \
	$(VIRTUAL_PNG) \
	$(WEBCAM_PNG) \
	$(WHERIGO_PNG) \
	$(PUSHPIN_PNG) \
	$(FOUND_PNG) \
	$(BLUEPIN_PNG) \
	$(PARKING_PNG) \
	$(TRAILHEAD_PNG)  

PROGRAMFILES_ICONS_48X48 = \
	$(CIRCLE_PNG)  

PROGRAMFILES_DOCS = \
	$(LICENCE_TXT) \
	$(CHANGEHISTORY_TXT) \
	$(README_TXT)  

PROGRAMFILES = \
	$(OCMENGINE_DLL) \
	$(OCMENGINE_DLL_MDB) \
	$(OCM_GTK_EXE_MDB)  

BINARIES = \
	$(OCM_GTK)  

RESGEN = resgen2
FILES = \
	gtk-gui/generated.cs \
	MainWindow.cs \
	gtk-gui/MainWindow.cs \
	Main.cs \
	AssemblyInfo.cs \
	gtk-gui/ocmgtk.GeocacheInfoPanel.cs \
	gtk-gui/ocmgtk.GeoCachePane.cs \
	gtk-gui/ocmgtk.CacheList.cs \
	Widgets/CacheList.cs \
	Widgets/GeocacheInfoPanel.cs \
	Widgets/GeoCachePane.cs \
	gtk-gui/ocmgtk.WaypointWidget.cs \
	gtk-gui/ocmgtk.LogViewerWidget.cs \
	gtk-gui/ocmgtk.BrowserWidget.cs \
	gtk-gui/ocmgtk.WaypointDialog.cs \
	Widgets/WaypointWidget.cs \
	Widgets/BrowserWidget.cs \
	Widgets/LogViewerWidget.cs \
	Dialogs/WaypointDialog.cs \
	Widgets/HTMLWidget.cs \
	UIMonitor.cs \
	gtk-gui/ocmgtk.HTMLWidget.cs \
	Dialogs/ProgressDialog.cs \
	gtk-gui/ocmgtk.ProgressDialog.cs \
	Dialogs/Preferences.cs \
	gtk-gui/ocmgtk.Preferences.cs \
	Widgets/CoordinateWidget.cs \
	gtk-gui/ocmgtk.CoordinateWidget.cs \
	Widgets/SetupAssistantPage1.cs \
	gtk-gui/ocmgtk.SetupAssistantPage1.cs \
	Dialogs/SetupAssistant.cs \
	gtk-gui/ocmgtk.SetupAssistant.cs \
	IDBusComm.cs \
	DBusComm.cs \
	Widgets/SetupAssistantPage2.cs \
	gtk-gui/ocmgtk.SetupAssistantPage2.cs \
	Widgets/SetupAssistantPage3.cs \
	gtk-gui/ocmgtk.SetupAssistantPage3.cs \
	Dialogs/ExportProgressDialog.cs \
	gtk-gui/ocmgtk.ExportProgressDialog.cs \
	Widgets/DescriptionWidget.cs \
	gtk-gui/ocmgtk.DescriptionWidget.cs \
	Widgets/OCMQueryPage1.cs \
	gtk-gui/ocmgtk.OCMQueryPage1.cs \
	Dialogs/OCMSplash.cs \
	gtk-gui/ocmgtk.OCMSplash.cs \
	Dialogs/FilterDialog.cs \
	gtk-gui/ocmgtk.FilterDialog.cs \
	Widgets/OCMQueryPage2.cs \
	gtk-gui/ocmgtk.OCMQueryPage2.cs \
	Widgets/OCMWebView.cs \
	Dialogs/GPSConfiguration.cs \
	gtk-gui/ocmgtk.GPSConfiguration.cs \
	Widgets/GPXWidget.cs \
	gtk-gui/ocmgtk.GPXWidget.cs \
	gtk-gui/ocmgtk.GarminUSBWidget.cs \
	Widgets/GarminUSBWidget.cs \
	Widgets/IGPSConfig.cs \
	Dialogs/SendWaypointsDialog.cs \
	gtk-gui/ocmgtk.SendWaypointsDialog.cs \
	SavedGPSConf.cs \
	Widgets/MagellanExploristWidget.cs \
	gtk-gui/ocmgtk.MagellanExploristWidget.cs \
	Widgets/GenericGPSWidget.cs \
	gtk-gui/ocmgtk.GenericGPSWidget.cs \
	Widgets/OCMQueryPage3.cs \
	gtk-gui/ocmgtk.OCMQueryPage3.cs 

DATA_FILES = 
RESOURCES = \
	gtk-gui/gui.stetic \
	icons/scalable/OCMLogo.svg,ocmgtk.icons.scalable.OCMLogo.svg 

EXTRAS = \
	Dialogs \
	Widgets \
	web \
	icons \
	icons/scalable \
	icons/24x24 \
	docs \
	OCM.desktop \
	x-gpx.xml \
	x-ocm.xml \
	ocm-gtk.in 

REFERENCES = \
	System \
	$(GTK_SHARP_20_LIBS) \
	Mono.Posix \
	$(WEBKIT_SHARP_10_LIBS) \
	$(GTKHTML_SHARP_314_LIBS) \
	$(GCONF_SHARP_20_LIBS) \
	$(NDESK_DBUS_10_LIBS) \
	$(NDESK_DBUS_GLIB_10_LIBS) \
	$(GLIB_SHARP_20_LIBS)

DLL_REFERENCES = 
CLEANFILES = $(LINUX_DESKTOPAPPLICATIONS) \
	$(COMMONAPPLICATIONDATAROOT_MIME_PACKAGES) \
	$(PROGRAMFILES_ICONS_SCALABLE) $(PROGRAMFILES_WEB) \
	$(PROGRAMFILES_ICONS_24X24) $(PROGRAMFILES_ICONS_48X48) \
	$(PROGRAMFILES_DOCS) $(PROGRAMFILES) $(BINARIES) $(ASSEMBLY) \
	$(ASSEMBLY).mdb $(BINARIES) $(build_resx_resources) \
	$(build_satellite_assembly_list)
VALID_CULTURES = ar bg ca zh-CHS cs da de el en es fi fr he hu is it ja ko nl no pl pt ro ru hr sk sq sv th tr id uk be sl et lv lt fa vi hy eu mk af fo hi sw gu ta te kn mr gl kok ar-SA bg-BG ca-ES zh-TW cs-CZ da-DK de-DE el-GR en-US fi-FI fr-FR he-IL hu-HU is-IS it-IT ja-JP ko-KR nl-NL nb-NO pl-PL pt-BR ro-RO ru-RU hr-HR sk-SK sq-AL sv-SE th-TH tr-TR id-ID uk-UA be-BY sl-SI et-EE lv-LV lt-LT fa-IR vi-VN hy-AM eu-ES mk-MK af-ZA fo-FO hi-IN sw-KE gu-IN ta-IN te-IN kn-IN mr-IN gl-ES kok-IN ar-IQ zh-CN de-CH en-GB es-MX fr-BE it-CH nl-BE nn-NO pt-PT sv-FI ar-EG zh-HK de-AT en-AU es-ES fr-CA ar-LY zh-SG de-LU en-CA es-GT fr-CH ar-DZ zh-MO en-NZ es-CR fr-LU ar-MA en-IE es-PA ar-TN en-ZA es-DO ar-OM es-VE ar-YE es-CO ar-SY es-PE ar-JO en-TT es-AR ar-LB en-ZW es-EC ar-KW en-PH es-CL ar-AE es-UY ar-BH es-PY ar-QA es-BO es-SV es-HN es-NI es-PR zh-CHT
s2q = $(subst \ ,?,$1)
q2s = $(subst ?,\ ,$1)
# use this when result will be quoted
unesc2 = $(subst ?, ,$1)
build_sources = $(FILES) $(GENERATED_FILES)
build_sources_esc = $(call s2q,$(build_sources))
# use unesc2, as build_sources_embed is quoted
build_sources_embed = $(call unesc2,$(build_sources_esc:%='$(srcdir)/%'))
comma__ = ,
get_resource_name = $(firstword $(subst $(comma__), ,$1))
get_culture = $(lastword $(subst ., ,$(basename $1)))
is_cultured_resource = $(and $(word 3,$(subst ., ,$1)), $(filter $(VALID_CULTURES),$(lastword $(subst ., ,$(basename $1)))))
RESOURCES_ESC = $(call s2q,$(RESOURCES))
build_resx_list = $(foreach res, $(RESOURCES_ESC), $(if $(filter %.resx, $(call get_resource_name,$(res))),$(res),))
build_non_culture_resx_list = $(foreach res, $(build_resx_list),$(if $(call is_cultured_resource,$(call get_resource_name,$(res))),,$(res)))
build_non_culture_others_list = $(foreach res, $(filter-out $(build_resx_list),$(RESOURCES_ESC)),$(if $(call is_cultured_resource,$(call get_resource_name,$(res))),,$(res)))
build_others_list = $(build_non_culture_others_list)
build_xamlg_list = $(filter %.xaml.g.cs, $(FILES))

# resgen all .resx resources
build_resx_files = $(foreach res, $(build_resx_list), $(call get_resource_name,$(res)))
build_resx_resources_esc = $(build_resx_files:.resx=.resources)
build_resx_resources = $(call q2s,$(build_resx_resources_esc))

# embed resources for the main assembly
build_resx_resources_hack = $(subst .resx,.resources, $(build_non_culture_resx_list))
# use unesc2, as build_resx_resources_embed is quoted
build_resx_resources_embed = $(call unesc2,$(build_resx_resources_hack:%='-resource:%'))
build_others_files = $(call q2s,$(foreach res, $(build_others_list),$(call get_resource_name,$(res))))
build_others_resources = $(build_others_files)
# use unesc2, as build_others_resources_embed is quoted
build_others_resources_embed = $(call unesc2,$(build_others_list:%='-resource:$(srcdir)/%'))
build_resources = $(build_resx_resources) $(build_others_resources)
build_resources_embed = $(build_resx_resources_embed) $(build_others_resources_embed)

# -usesourcepath is available only for resgen2
emit_resgen_target_1 = $(call q2s,$1) : $(call q2s,$(subst .resources,.resx,$1)); cd '$$(shell dirname '$$<')' && MONO_IOMAP=drive $$(RESGEN) '$$(shell basename '$$<')' '$$(shell basename '$$@')'
emit_resgen_target_2 = $(call q2s,$1) : $(call q2s,$(subst .resources,.resx,$1)); MONO_IOMAP=drive $$(RESGEN) -usesourcepath '$$<' '$$@'
emit_resgen_target = $(if $(filter resgen2,$(RESGEN)),$(emit_resgen_target_2),$(emit_resgen_target_1))
emit_resgen_targets = $(foreach res,$(build_resx_resources_esc),$(eval $(call emit_resgen_target,$(res))))
build_references_ref = $(call q2s,$(foreach ref, $(call \
	s2q,$(REFERENCES)), $(if $(filter -pkg:%, $(ref)), $(ref), \
	$(if $(filter -r:%, $(ref)), $(ref), -r:$(ref))))) $(call \
	q2s,$(foreach ref, $(call s2q,$(DLL_REFERENCES)), -r:$(ref))) \
	$(call q2s,$(foreach ref, $(call s2q,$(PROJECT_REFERENCES)), \
	-r:$(ref)))
s2q2s = $(call unesc2,$(call s2q,$1))
cp_actual = test -z $1 || cp $1 $2
cp = $(call cp_actual,'$(call s2q2s,$1)','$(call s2q2s,$2)')
rm_actual = test -z '$1' || rm -f '$2'
rm = $(call rm_actual,$(call s2q2s,$1),$(call s2q2s,$2)/$(shell basename '$(call s2q2s,$1)'))
DISTCLEANFILES = $(GENERATED_FILES) $(pc_files) $(BUILD_DIR)/*
pkglib_SCRIPTS = $(ASSEMBLY)
bin_SCRIPTS = $(BINARIES)
linuxpkgconfigdir = @libdir@/pkgconfig
linuxpkgconfig_DATA = $(LINUX_PKGCONFIG)
programfilesicons24x24dir = @libdir@/@PACKAGE@/icons/24x24
programfilesicons24x24_DATA = $(PROGRAMFILES_ICONS_24X24)
programfilesiconsscalabledir = @libdir@/@PACKAGE@/icons/scalable
programfilesiconsscalable_DATA = $(PROGRAMFILES_ICONS_SCALABLE)
commonapplicationdatarootmimepackagesdir = @datadir@/mime/packages
commonapplicationdatarootmimepackages_DATA = $(COMMONAPPLICATIONDATAROOT_MIME_PACKAGES)
programfilesdocsdir = @libdir@/@PACKAGE@/docs
programfilesdocs_DATA = $(PROGRAMFILES_DOCS)
programfilesdir = @libdir@/@PACKAGE@
programfiles_DATA = $(PROGRAMFILES)
programfilesicons48x48dir = @libdir@/@PACKAGE@/icons/48x48
programfilesicons48x48_DATA = $(PROGRAMFILES_ICONS_48X48)
linuxdesktopapplicationsdir = @datadir@/applications
linuxdesktopapplications_DATA = $(LINUX_DESKTOPAPPLICATIONS)
programfileswebdir = @libdir@/@PACKAGE@/web
programfilesweb_DATA = $(PROGRAMFILES_WEB)

# generating satellite assemblies
culture_resources = $(foreach res, $(RESOURCES_ESC), $(if $(call is_cultured_resource,$(call get_resource_name, $(res))),$(res)))
cultures = $(sort $(foreach res, $(culture_resources), $(call get_culture,$(call get_resource_name,$(res)))))
culture_resource_dependencies = $(call q2s,$(BUILD_DIR)/$1/$(SATELLITE_ASSEMBLY_NAME): $(subst .resx,.resources,$2))
culture_resource_commandlines = $(call unesc2,cmd_line_satellite_$1 += '/embed:$(subst .resx,.resources,$2)')
build_satellite_assembly_list = $(call q2s,$(cultures:%=$(BUILD_DIR)/%/$(SATELLITE_ASSEMBLY_NAME)))
build_culture_res_files = $(call q2s,$(foreach res, $(culture_resources),$(call get_resource_name,$(res))))
install_satellite_assembly_list = $(subst $(BUILD_DIR),$(DESTDIR)$(libdir)/$(PACKAGE),$(build_satellite_assembly_list))
OCM_DESKTOP = $(BUILD_DIR)/OCM.desktop
X_GPX_XML = $(BUILD_DIR)/mime/packages/x-gpx.xml
X_OCM_XML = $(BUILD_DIR)/mime/packages/x-ocm.xml
OCMLOGO_SVG = $(BUILD_DIR)/icons/scalable/OCMLogo.svg
CITO_SVG = $(BUILD_DIR)/icons/scalable/cito.svg
EARTH_SVG = $(BUILD_DIR)/icons/scalable/earth.svg
FOUND_SVG = $(BUILD_DIR)/icons/scalable/found.svg
HALFSTAR_SVG = $(BUILD_DIR)/icons/scalable/halfstar.svg
LETTERBOX_SVG = $(BUILD_DIR)/icons/scalable/letterbox.svg
MULTI_SVG = $(BUILD_DIR)/icons/scalable/multi.svg
OTHER_SVG = $(BUILD_DIR)/icons/scalable/other.svg
STAR_SVG = $(BUILD_DIR)/icons/scalable/star.svg
STAR_EMPTY_SVG = $(BUILD_DIR)/icons/scalable/star_empty.svg
UNKNOWN_SVG = $(BUILD_DIR)/icons/scalable/unknown.svg
WAYPOINT_FLAG_RED_SVG = $(BUILD_DIR)/icons/scalable/waypoint-flag-red.svg
WPT_VIEWER_HTML = $(BUILD_DIR)/web/wpt_viewer.html
EVENT_SVG = $(BUILD_DIR)/icons/scalable/event.svg
MEGA_SVG = $(BUILD_DIR)/icons/scalable/mega.svg
VIRTUAL_SVG = $(BUILD_DIR)/icons/scalable/virtual.svg
WEBCAM_SVG = $(BUILD_DIR)/icons/scalable/webcam.svg
WHERIGO_SVG = $(BUILD_DIR)/icons/scalable/wherigo.svg
CITO_PNG = $(BUILD_DIR)/icons/24x24/cito.png
EARTH_PNG = $(BUILD_DIR)/icons/24x24/earth.png
EVENT_PNG = $(BUILD_DIR)/icons/24x24/event.png
LETTERBOX_PNG = $(BUILD_DIR)/icons/24x24/letterbox.png
MEGA_PNG = $(BUILD_DIR)/icons/24x24/mega.png
MULTI_PNG = $(BUILD_DIR)/icons/24x24/multi.png
OTHER_PNG = $(BUILD_DIR)/icons/24x24/other.png
OWNED_PNG = $(BUILD_DIR)/icons/24x24/owned.png
TRADITIONAL_PNG = $(BUILD_DIR)/icons/24x24/traditional.png
UNKNOWN_PNG = $(BUILD_DIR)/icons/24x24/unknown.png
VIRTUAL_PNG = $(BUILD_DIR)/icons/24x24/virtual.png
WEBCAM_PNG = $(BUILD_DIR)/icons/24x24/webcam.png
WHERIGO_PNG = $(BUILD_DIR)/icons/24x24/wherigo.png
CIRCLE_PNG = $(BUILD_DIR)/icons/48x48/circle.png
PUSHPIN_PNG = $(BUILD_DIR)/icons/24x24/pushpin.png
FOUND_PNG = $(BUILD_DIR)/icons/24x24/found.png
TRADITIONAL_SVG = $(BUILD_DIR)/icons/scalable/traditional.svg
BLUEPIN_PNG = $(BUILD_DIR)/icons/24x24/bluepin.png
PARKING_PNG = $(BUILD_DIR)/icons/24x24/parking.png
TRAILHEAD_PNG = $(BUILD_DIR)/icons/24x24/trailhead.png
BLUEPIN_SVG = $(BUILD_DIR)/icons/scalable/bluepin.svg
PARKING_SVG = $(BUILD_DIR)/icons/scalable/parking.svg
TRAILHEAD_SVG = $(BUILD_DIR)/icons/scalable/trailhead.svg
LICENCE_TXT = $(BUILD_DIR)/docs/Licence.txt
CHANGEHISTORY_TXT = $(BUILD_DIR)/docs/ChangeHistory.txt
README_TXT = $(BUILD_DIR)/docs/README.txt
OCMENGINE_DLL = $(BUILD_DIR)/ocmengine.dll
OCM_GTK = $(BUILD_DIR)/ocm-gtk
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/Makefile.include $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign ocm-gtk/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign ocm-gtk/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
ocm-gtk: $(top_builddir)/config.status $(srcdir)/ocm-gtk.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files
install-pkglibSCRIPTS: $(pkglib_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(pkglibdir)" || $(MKDIR_P) "$(DESTDIR)$(pkglibdir)"
	@list='$(pkglib_SCRIPTS)'; test -n "$(pkglibdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(pkglibdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(pkglibdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-pkglibSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_SCRIPTS)'; test -n "$(pkglibdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkglibdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pkglibdir)" && rm -f $$files
install-commonapplicationdatarootmimepackagesDATA: $(commonapplicationdatarootmimepackages_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(commonapplicationdatarootmimepackagesdir)" || $(MKDIR_P) "$(DESTDIR)$(commonapplicationdatarootmimepackagesdir)"
	@list='$(commonapplicationdatarootmimepackages_DATA)'; test -n "$(commonapplicationdatarootmimepackagesdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(commonapplicationdatarootmimepackagesdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(commonapplicationdatarootmimepackagesdir)" || exit $$?; \
	done

uninstall-commonapplicationdatarootmimepackagesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(commonapplicationdatarootmimepackages_DATA)'; test -n "$(commonapplicationdatarootmimepackagesdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(commonapplicationdatarootmimepackagesdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(commonapplicationdatarootmimepackagesdir)" && rm -f $$files
install-linuxdesktopapplicationsDATA: $(linuxdesktopapplications_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(linuxdesktopapplicationsdir)" || $(MKDIR_P) "$(DESTDIR)$(linuxdesktopapplicationsdir)"
	@list='$(linuxdesktopapplications_DATA)'; test -n "$(linuxdesktopapplicationsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(linuxdesktopapplicationsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(linuxdesktopapplicationsdir)" || exit $$?; \
	done

uninstall-linuxdesktopapplicationsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(linuxdesktopapplications_DATA)'; test -n "$(linuxdesktopapplicationsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(linuxdesktopapplicationsdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(linuxdesktopapplicationsdir)" && rm -f $$files
install-linuxpkgconfigDATA: $(linuxpkgconfig_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(linuxpkgconfigdir)" || $(MKDIR_P) "$(DESTDIR)$(linuxpkgconfigdir)"
	@list='$(linuxpkgconfig_DATA)'; test -n "$(linuxpkgconfigdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(linuxpkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(linuxpkgconfigdir)" || exit $$?; \
	done

uninstall-linuxpkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(linuxpkgconfig_DATA)'; test -n "$(linuxpkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(linuxpkgconfigdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(linuxpkgconfigdir)" && rm -f $$files
install-programfilesDATA: $(programfiles_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(programfilesdir)" || $(MKDIR_P) "$(DESTDIR)$(programfilesdir)"
	@list='$(programfiles_DATA)'; test -n "$(programfilesdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(programfilesdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(programfilesdir)" || exit $$?; \
	done

uninstall-programfilesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(programfiles_DATA)'; test -n "$(programfilesdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(programfilesdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(programfilesdir)" && rm -f $$files
install-programfilesdocsDATA: $(programfilesdocs_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(programfilesdocsdir)" || $(MKDIR_P) "$(DESTDIR)$(programfilesdocsdir)"
	@list='$(programfilesdocs_DATA)'; test -n "$(programfilesdocsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(programfilesdocsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(programfilesdocsdir)" || exit $$?; \
	done

uninstall-programfilesdocsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(programfilesdocs_DATA)'; test -n "$(programfilesdocsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(programfilesdocsdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(programfilesdocsdir)" && rm -f $$files
install-programfilesicons24x24DATA: $(programfilesicons24x24_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(programfilesicons24x24dir)" || $(MKDIR_P) "$(DESTDIR)$(programfilesicons24x24dir)"
	@list='$(programfilesicons24x24_DATA)'; test -n "$(programfilesicons24x24dir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(programfilesicons24x24dir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(programfilesicons24x24dir)" || exit $$?; \
	done

uninstall-programfilesicons24x24DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(programfilesicons24x24_DATA)'; test -n "$(programfilesicons24x24dir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(programfilesicons24x24dir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(programfilesicons24x24dir)" && rm -f $$files
install-programfilesicons48x48DATA: $(programfilesicons48x48_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(programfilesicons48x48dir)" || $(MKDIR_P) "$(DESTDIR)$(programfilesicons48x48dir)"
	@list='$(programfilesicons48x48_DATA)'; test -n "$(programfilesicons48x48dir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(programfilesicons48x48dir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(programfilesicons48x48dir)" || exit $$?; \
	done

uninstall-programfilesicons48x48DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(programfilesicons48x48_DATA)'; test -n "$(programfilesicons48x48dir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(programfilesicons48x48dir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(programfilesicons48x48dir)" && rm -f $$files
install-programfilesiconsscalableDATA: $(programfilesiconsscalable_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(programfilesiconsscalabledir)" || $(MKDIR_P) "$(DESTDIR)$(programfilesiconsscalabledir)"
	@list='$(programfilesiconsscalable_DATA)'; test -n "$(programfilesiconsscalabledir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(programfilesiconsscalabledir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(programfilesiconsscalabledir)" || exit $$?; \
	done

uninstall-programfilesiconsscalableDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(programfilesiconsscalable_DATA)'; test -n "$(programfilesiconsscalabledir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(programfilesiconsscalabledir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(programfilesiconsscalabledir)" && rm -f $$files
install-programfileswebDATA: $(programfilesweb_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(programfileswebdir)" || $(MKDIR_P) "$(DESTDIR)$(programfileswebdir)"
	@list='$(programfilesweb_DATA)'; test -n "$(programfileswebdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(programfileswebdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(programfileswebdir)" || exit $$?; \
	done

uninstall-programfileswebDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(programfilesweb_DATA)'; test -n "$(programfileswebdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(programfileswebdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(programfileswebdir)" && rm -f $$files
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(SCRIPTS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(commonapplicationdatarootmimepackagesdir)" "$(DESTDIR)$(linuxdesktopapplicationsdir)" "$(DESTDIR)$(linuxpkgconfigdir)" "$(DESTDIR)$(programfilesdir)" "$(DESTDIR)$(programfilesdocsdir)" "$(DESTDIR)$(programfilesicons24x24dir)" "$(DESTDIR)$(programfilesicons48x48dir)" "$(DESTDIR)$(programfilesiconsscalabledir)" "$(DESTDIR)$(programfileswebdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-commonapplicationdatarootmimepackagesDATA \
	install-linuxdesktopapplicationsDATA \
	install-linuxpkgconfigDATA install-programfilesDATA \
	install-programfilesdocsDATA \
	install-programfilesicons24x24DATA \
	install-programfilesicons48x48DATA \
	install-programfilesiconsscalableDATA \
	install-programfileswebDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binSCRIPTS install-pkglibSCRIPTS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binSCRIPTS \
	uninstall-commonapplicationdatarootmimepackagesDATA \
	uninstall-linuxdesktopapplicationsDATA \
	uninstall-linuxpkgconfigDATA uninstall-pkglibSCRIPTS \
	uninstall-programfilesDATA uninstall-programfilesdocsDATA \
	uninstall-programfilesicons24x24DATA \
	uninstall-programfilesicons48x48DATA \
	uninstall-programfilesiconsscalableDATA \
	uninstall-programfileswebDATA

.MAKE: install-am install-strip

.PHONY: all all-am check check-am clean clean-generic distclean \
	distclean-generic distdir dvi dvi-am html html-am info info-am \
	install install-am install-binSCRIPTS \
	install-commonapplicationdatarootmimepackagesDATA install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-linuxdesktopapplicationsDATA \
	install-linuxpkgconfigDATA install-man install-pdf \
	install-pdf-am install-pkglibSCRIPTS install-programfilesDATA \
	install-programfilesdocsDATA \
	install-programfilesicons24x24DATA \
	install-programfilesicons48x48DATA \
	install-programfilesiconsscalableDATA \
	install-programfileswebDATA install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-generic pdf pdf-am ps ps-am uninstall uninstall-am \
	uninstall-binSCRIPTS \
	uninstall-commonapplicationdatarootmimepackagesDATA \
	uninstall-linuxdesktopapplicationsDATA \
	uninstall-linuxpkgconfigDATA uninstall-pkglibSCRIPTS \
	uninstall-programfilesDATA uninstall-programfilesdocsDATA \
	uninstall-programfilesicons24x24DATA \
	uninstall-programfilesicons48x48DATA \
	uninstall-programfilesiconsscalableDATA \
	uninstall-programfileswebDATA


all: $(ASSEMBLY) $(LINUX_DESKTOPAPPLICATIONS) $(COMMONAPPLICATIONDATAROOT_MIME_PACKAGES) $(PROGRAMFILES_ICONS_SCALABLE) $(PROGRAMFILES_WEB) $(PROGRAMFILES_ICONS_24X24) $(PROGRAMFILES_ICONS_48X48) $(PROGRAMFILES_DOCS) $(PROGRAMFILES) $(BINARIES) 

# macros

# $(call emit-deploy-target,deploy-variable-name)
define emit-deploy-target
$($1): $($1_SOURCE)
	mkdir -p '$$(shell dirname '$$@')'
	cp '$$<' '$$@'
endef

# $(call emit-deploy-wrapper,wrapper-variable-name,wrapper-sourcefile,x)
# assumes that for a wrapper foo.pc its source template is foo.pc.in
# if $3 is non-empty then wrapper is marked exec
define emit-deploy-wrapper
$($1): $2 
	mkdir -p '$$(shell dirname '$$@')'
	cp '$$<' '$$@'
	$(if $3,chmod +x '$$@')

endef

$(eval $(foreach res, $(culture_resources), $(eval $(call culture_resource_dependencies,$(call get_culture,$(call get_resource_name,$(res))),$(call get_resource_name,$(res))))))
$(eval $(foreach res, $(culture_resources), $(eval $(call culture_resource_commandlines,$(call get_culture,$(call get_resource_name,$(res))),$(res)))))

$(build_satellite_assembly_list): $(BUILD_DIR)/%/$(SATELLITE_ASSEMBLY_NAME):
	mkdir -p '$(@D)'
	$(AL) -out:'$@' -culture:$* -t:lib $(cmd_line_satellite_$*)

$(install_satellite_assembly_list):
	mkdir -p '$(@D)'
	cp $(subst $(DESTDIR)$(libdir)/$(PACKAGE), $(BUILD_DIR), $@) $@

install-satellite-assemblies: $(install_satellite_assembly_list)

uninstall-satellite-assemblies:
	rm -rf $(install_satellite_assembly_list)

$(eval $(call emit-deploy-target,OCM_DESKTOP))
$(eval $(call emit-deploy-target,X_GPX_XML))
$(eval $(call emit-deploy-target,X_OCM_XML))
$(eval $(call emit-deploy-target,OCMLOGO_SVG))
$(eval $(call emit-deploy-target,CITO_SVG))
$(eval $(call emit-deploy-target,EARTH_SVG))
$(eval $(call emit-deploy-target,FOUND_SVG))
$(eval $(call emit-deploy-target,HALFSTAR_SVG))
$(eval $(call emit-deploy-target,LETTERBOX_SVG))
$(eval $(call emit-deploy-target,MULTI_SVG))
$(eval $(call emit-deploy-target,OTHER_SVG))
$(eval $(call emit-deploy-target,STAR_SVG))
$(eval $(call emit-deploy-target,STAR_EMPTY_SVG))
$(eval $(call emit-deploy-target,UNKNOWN_SVG))
$(eval $(call emit-deploy-target,WAYPOINT_FLAG_RED_SVG))
$(eval $(call emit-deploy-target,WPT_VIEWER_HTML))
$(eval $(call emit-deploy-target,EVENT_SVG))
$(eval $(call emit-deploy-target,MEGA_SVG))
$(eval $(call emit-deploy-target,VIRTUAL_SVG))
$(eval $(call emit-deploy-target,WEBCAM_SVG))
$(eval $(call emit-deploy-target,WHERIGO_SVG))
$(eval $(call emit-deploy-target,CITO_PNG))
$(eval $(call emit-deploy-target,EARTH_PNG))
$(eval $(call emit-deploy-target,EVENT_PNG))
$(eval $(call emit-deploy-target,LETTERBOX_PNG))
$(eval $(call emit-deploy-target,MEGA_PNG))
$(eval $(call emit-deploy-target,MULTI_PNG))
$(eval $(call emit-deploy-target,OTHER_PNG))
$(eval $(call emit-deploy-target,OWNED_PNG))
$(eval $(call emit-deploy-target,TRADITIONAL_PNG))
$(eval $(call emit-deploy-target,UNKNOWN_PNG))
$(eval $(call emit-deploy-target,VIRTUAL_PNG))
$(eval $(call emit-deploy-target,WEBCAM_PNG))
$(eval $(call emit-deploy-target,WHERIGO_PNG))
$(eval $(call emit-deploy-target,CIRCLE_PNG))
$(eval $(call emit-deploy-target,PUSHPIN_PNG))
$(eval $(call emit-deploy-target,FOUND_PNG))
$(eval $(call emit-deploy-target,TRADITIONAL_SVG))
$(eval $(call emit-deploy-target,BLUEPIN_PNG))
$(eval $(call emit-deploy-target,PARKING_PNG))
$(eval $(call emit-deploy-target,TRAILHEAD_PNG))
$(eval $(call emit-deploy-target,BLUEPIN_SVG))
$(eval $(call emit-deploy-target,PARKING_SVG))
$(eval $(call emit-deploy-target,TRAILHEAD_SVG))
$(eval $(call emit-deploy-target,LICENCE_TXT))
$(eval $(call emit-deploy-target,CHANGEHISTORY_TXT))
$(eval $(call emit-deploy-target,README_TXT))
$(eval $(call emit-deploy-target,OCMENGINE_DLL))
$(eval $(call emit-deploy-target,OCMENGINE_DLL_MDB))
$(eval $(call emit-deploy-wrapper,OCM_GTK,ocm-gtk,x))

$(eval $(call emit_resgen_targets))
$(build_xamlg_list): %.xaml.g.cs: %.xaml
	xamlg '$<'

$(ASSEMBLY_MDB): $(ASSEMBLY)

$(ASSEMBLY): $(build_sources) $(build_resources) $(build_datafiles) $(DLL_REFERENCES) $(PROJECT_REFERENCES) $(build_xamlg_list) $(build_satellite_assembly_list)
	mkdir -p $(shell dirname $(ASSEMBLY))
	$(ASSEMBLY_COMPILER_COMMAND) $(ASSEMBLY_COMPILER_FLAGS) -out:$(ASSEMBLY) -target:$(COMPILE_TARGET) $(build_sources_embed) $(build_resources_embed) $(build_references_ref)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
